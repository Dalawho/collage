"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
exports.__esModule = true;
exports.StringTest__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [],
        stateMutability: "nonpayable",
        type: "constructor"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address"
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address"
            },
        ],
        name: "OwnershipTransferred",
        type: "event"
    },
    {
        inputs: [
            {
                internalType: "uint24",
                name: "col",
                type: "uint24"
            },
        ],
        name: "_invertColor",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string"
            },
        ],
        stateMutability: "pure",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint8[3]",
                name: "numbs",
                type: "uint8[3]"
            },
        ],
        name: "_rgbToHexString",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string"
            },
        ],
        stateMutability: "pure",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "bytes4",
                name: "test",
                type: "bytes4"
            },
        ],
        name: "getGray",
        outputs: [
            {
                internalType: "uint8",
                name: "gray",
                type: "uint8"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "bytes4",
                name: "test",
                type: "bytes4"
            },
        ],
        name: "getNumbers",
        outputs: [
            {
                internalType: "uint8[3]",
                name: "numbs",
                type: "uint8[3]"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "bytes4",
                name: "test",
                type: "bytes4"
            },
        ],
        name: "getbytes",
        outputs: [
            {
                internalType: "bytes1[3]",
                name: "numbs",
                type: "bytes1[3]"
            },
        ],
        stateMutability: "pure",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "bytes4",
                name: "color",
                type: "bytes4"
            },
            {
                internalType: "uint256",
                name: "gray",
                type: "uint256"
            },
        ],
        name: "grayToColor",
        outputs: [
            {
                internalType: "uint8[3]",
                name: "numbs",
                type: "uint8[3]"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "bytes4[]",
                name: "colors",
                type: "bytes4[]"
            },
            {
                internalType: "uint8[]",
                name: "grays",
                type: "uint8[]"
            },
        ],
        name: "graysToPalette",
        outputs: [
            {
                internalType: "string[]",
                name: "coloredGrays",
                type: "string[]"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address"
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
];
var _bytecode = "";
var isSuperArgs = function (xs) { return xs.length > 1; };
var StringTest__factory = /** @class */ (function (_super) {
    __extends(StringTest__factory, _super);
    function StringTest__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    StringTest__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    StringTest__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    StringTest__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    StringTest__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    StringTest__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    StringTest__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    StringTest__factory.bytecode = _bytecode;
    StringTest__factory.abi = _abi;
    return StringTest__factory;
}(ethers_1.ContractFactory));
exports.StringTest__factory = StringTest__factory;
