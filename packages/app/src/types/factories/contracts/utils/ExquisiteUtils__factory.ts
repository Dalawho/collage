/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ExquisiteUtils,
  ExquisiteUtilsInterface,
} from "../../../contracts/utils/ExquisiteUtils";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint24",
        name: "col",
        type: "uint24",
      },
    ],
    name: "_invertColor",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x6102f061003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063daeb28461461003a575b600080fd5b61004d61004836600461019a565b610063565b60405161005a91906101bf565b60405180910390f35b60606000805b60038110156100bb5761007d8460ff61022a565b60f81b6001600160f81b0319166008836001600160e81b031916901c17915060088462ffffff16901c935080806100b39061024d565b915050610069565b506100c88160e81c6100cf565b9392505050565b6040805160068082528183019092526060916000919060208201818036833701905050905060005b600681101561015e5761010c84600f16610165565b82610118836005610268565b815181106101285761012861027f565b60200101906001600160f81b031916908160001a90535060048462ffffff16901c935080806101569061024d565b9150506100f7565b5092915050565b600060098260ff16116101855761017d826030610295565b60f81b610194565b610190826057610295565b60f81b5b92915050565b6000602082840312156101ac57600080fd5b813562ffffff811681146100c857600080fd5b600060208083528351808285015260005b818110156101ec578581018301518582016040015282016101d0565b818111156101fe576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168082101561024457610244610214565b90039392505050565b600060001982141561026157610261610214565b5060010190565b60008282101561027a5761027a610214565b500390565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff84168060ff038211156102b2576102b2610214565b01939250505056fea264697066735822122068c43b37dbd07d0dd5fd4c212234553e88c6361db540ee7b7c787ebc7af6b60064736f6c634300080c0033";

type ExquisiteUtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExquisiteUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExquisiteUtils__factory extends ContractFactory {
  constructor(...args: ExquisiteUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ExquisiteUtils> {
    return super.deploy(overrides || {}) as Promise<ExquisiteUtils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ExquisiteUtils {
    return super.attach(address) as ExquisiteUtils;
  }
  override connect(signer: Signer): ExquisiteUtils__factory {
    return super.connect(signer) as ExquisiteUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExquisiteUtilsInterface {
    return new utils.Interface(_abi) as ExquisiteUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExquisiteUtils {
    return new Contract(address, _abi, signerOrProvider) as ExquisiteUtils;
  }
}
