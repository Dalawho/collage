/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Render,
  RenderInterface,
} from "../../../contracts/Render.sol/Render";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_size",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_end",
        type: "uint256",
      },
    ],
    name: "InvalidCodeAtRange",
    type: "error",
  },
  {
    inputs: [],
    name: "WriteError",
    type: "error",
  },
  {
    inputs: [],
    name: "onlyPiecesCanAddTokens",
    type: "error",
  },
  {
    inputs: [],
    name: "tokenDoesntExists",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "uint16",
        name: "destLen",
        type: "uint16",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "addToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getSVGForBytes",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gfx",
    outputs: [
      {
        internalType: "contract IExquisiteGraphics",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "inflateLib",
    outputs: [
      {
        internalType: "contract IInflator",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pieces",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "layerId",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "xOffset",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "yOffset",
            type: "uint8",
          },
        ],
        internalType: "struct Render.LayerStruct[4]",
        name: "layerIds",
        type: "tuple[4]",
      },
      {
        internalType: "uint8",
        name: "layerNr",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "layerId",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "xOffset",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "yOffset",
            type: "uint8",
          },
        ],
        internalType: "struct Render.LayerStruct",
        name: "newLayer",
        type: "tuple",
      },
    ],
    name: "previewCollage",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newGfx",
        type: "address",
      },
    ],
    name: "setGfx",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newInflate",
        type: "address",
      },
    ],
    name: "setInflator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newPieces",
        type: "address",
      },
    ],
    name: "setPieces",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "layerId",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "xOffset",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "yOffset",
            type: "uint8",
          },
        ],
        internalType: "struct Render.LayerStruct[4]",
        name: "layerIds",
        type: "tuple[4]",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612991806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638da5cb5b11610097578063c87b56dd11610066578063c87b56dd146101df578063eaea130f146101f2578063f2fde38b14610205578063fc7934131461021857600080fd5b80638da5cb5b14610195578063999694e7146101a6578063a82df44e146101b9578063bfec157f146101cc57600080fd5b8063715018a6116100d3578063715018a61461015257806372aa4a961461015a5780638129fc1c1461016d57806388e593431461017557600080fd5b806317674036146100fa57806318fb8d3c1461012a57806356ec592f1461013f575b600080fd5b60675461010d906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61013d610138366004611d83565b61022b565b005b60655461010d906001600160a01b031681565b61013d6102f4565b61013d610168366004611e16565b610308565b61013d610332565b610188610183366004611f32565b610511565b6040516101219190611fb8565b6033546001600160a01b031661010d565b60665461010d906001600160a01b031681565b6101886101c7366004611fcb565b61088b565b6101886101da366004612015565b610c71565b6101886101ed366004612052565b610ec9565b61013d610200366004611e16565b611016565b61013d610213366004611e16565b611040565b61013d610226366004611e16565b6110b6565b6067546001600160a01b0316331461025657604051639f9aec5d60e01b815260040160405180910390fd5b6068604051806060016040528061026c866110e0565b6001600160a01b03908116825261ffff80871660208085019190915260409384018790528554600181810188556000978852968290208651600290920201805487840151909416600160a01b026001600160b01b03199094169190941617919091178255918301518051939491936102ec93928501929190910190611c1d565b505050505050565b6102fc611145565b610306600061119f565b565b610310611145565b606680546001600160a01b0319166001600160a01b0392909216919091179055565b600054610100900460ff16158080156103525750600054600160ff909116105b8061036c5750303b15801561036c575060005460ff166001145b6103d45760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156103f7576000805461ff0019166101001790555b6103ff6111f1565b604080516060810182526000808252602080830182815284518083018652838152948401948552606880546001810182559352835160029093027fa2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c2209775381018054925161ffff16600160a01b026001600160b01b03199093166001600160a01b03959095169490941791909117835593518051939492936104c5937fa2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c2209775401929190910190611c1d565b505050801561050e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b60408051600480825260a082019092526060916000918291816020015b6040805160608082018352600080835260208301529181019190915281526020019060019003908161052e57905050905060005b60048110156106ce57606885826004811061057f5761057f61206b565b60200201516000015160ff168154811061059b5761059b61206b565b600091825260209182902060408051606081018252600290930290910180546001600160a01b038116845261ffff600160a01b9091041693830193909352600183018054929392918401916105ef90612081565b80601f016020809104026020016040519081016040528092919081815260200182805461061b90612081565b80156106685780601f1061063d57610100808354040283529160200191610668565b820191906000526020600020905b81548152906001019060200180831161064b57829003601f168201915b5050505050815250508282815181106106835761068361206b565b60200260200101819052508481600481106106a0576106a061206b565b60200201515160ff16156106bc57826106b8816120cc565b9350505b806106c6816120ec565b915050610562565b5060006106da86611220565b6040516020016106ea9190612147565b60405160208183030381529060405290508060405160200161070c91906121bb565b604051602081830303815290604052905060005b82518160ff1610156107fc5760006001600160a01b0316838260ff168151811061074c5761074c61206b565b6020026020010151600001516001600160a01b0316141561076c576107ea565b60ff811615610798578160405160200161078691906121ee565b60405160208183030381529060405291505b816107a58260ff16611220565b848360ff16815181106107ba576107ba61206b565b6020026020010151604001516040516020016107d893929190612213565b60405160208183030381529060405291505b806107f4816120cc565b915050610720565b508060405160200161080e91906122a0565b60405160208183030381529060405290508260ff16600014610860578061083d61083884886112bd565b6114b8565b60405160200161084e9291906122fc565b60405160208183030381529060405290505b806040516020016108719190612340565b60408051808303601f190181529190529695505050505050565b60408051600480825260a082019092526060916000918291816020015b604080516060808201835260008083526020830152918101919091528152602001906001900390816108a857905050905083868660ff16600481106108ef576108ef61206b565b602002015260005b6004811015610a635760688782600481106109145761091461206b565b60200201516000015160ff16815481106109305761093061206b565b600091825260209182902060408051606081018252600290930290910180546001600160a01b038116845261ffff600160a01b90910416938301939093526001830180549293929184019161098490612081565b80601f01602080910402602001604051908101604052809291908181526020018280546109b090612081565b80156109fd5780601f106109d2576101008083540402835291602001916109fd565b820191906000526020600020905b8154815290600101906020018083116109e057829003601f168201915b505050505081525050828281518110610a1857610a1861206b565b6020026020010181905250868160048110610a3557610a3561206b565b60200201515160ff1615610a515782610a4d816120cc565b9350505b80610a5b816120ec565b9150506108f7565b50604080516204006081019091526204004081526000602090910181815290808080805b8651811015610bd45760006001600160a01b0316878281518110610aad57610aad61206b565b6020026020010151600001516001600160a01b03161415610acd57610bc2565b610b07878281518110610ae257610ae261206b565b60200260200101518d8360048110610afc57610afc61206b565b60200201518861160c565b909350915060ff85168c8260048110610b2257610b2261206b565b602002015160400151610b359085612365565b60ff161115610b66578b8160048110610b5057610b5061206b565b602002015160400151610b639084612365565b94505b8360ff168c8260048110610b7c57610b7c61206b565b60200201516020015183610b909190612365565b60ff161115610bc2578b8160048110610bab57610bab61206b565b60200201516020015182610bbf9190612365565b93505b80610bcc816120ec565b915050610a87565b506040805180820190915260068152651e17b9bb339f60d11b6020820152610bfd9086906117dc565b610c098360ff16611220565b610c158560ff16611220565b610c2b610c2660ff8716600a61238a565b611220565b610c3c610c2660ff8916600a61238a565b88604051602001610c5195949392919061241e565b6040516020818303038152906040529750505050505050505b9392505050565b604080516204006081018252620400408152600060209091018181526065549251631becbd1560e11b815260609391929182916001600160a01b03909116906337d97a2a90610cc4908890600401611fb8565b6040805180830381865afa158015610ce0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0491906124de565b91509150610d40604051806040016040528060178152602001766d61646520697420706173742064696d656e73696f6e7360481b815250611867565b610d4c8260ff166118aa565b610d588160ff166118aa565b610dbf610d678260ff16611220565b610d738460ff16611220565b610d84610c2660ff8616600a61238a565b610d95610c2660ff8816600a61238a565b604051602001610da89493929190612518565b60408051601f1981840301815291905284906117dc565b6040805160008152606081018252601760208201908152766d61646520697420706173742064696d656e73696f6e7360481b9282019290925290610e0290611867565b6065546040805180820182528381526000602082018190529151633df87b4d60e21b8152610e97936001600160a01b03169263f7e1ed3492610e4b928c9290819060040161263b565b600060405180830381865afa158015610e68573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e9091908101906126c3565b85906117dc565b6040805180820190915260068152651e17b9bb339f60d11b6020820152610ebf9085906117dc565b5091949350505050565b6060600060688381548110610ee057610ee061206b565b600091825260209182902060408051606081018252600290930290910180546001600160a01b038116845261ffff600160a01b909104169383019390935260018301805492939291840191610f3490612081565b80601f0160208091040260200160405190810160405280929190818152602001828054610f6090612081565b8015610fad5780601f10610f8257610100808354040283529160200191610fad565b820191906000526020600020905b815481529060010190602001808311610f9057829003601f168201915b505050505081525050905060008160400151604051602001610fcf91906126f8565b604051602081830303815290604052905080610fed610838846118ef565b604051602001610ffe929190612763565b60408051601f19818403018152919052949350505050565b61101e611145565b606780546001600160a01b0319166001600160a01b0392909216919091179055565b611048611145565b6001600160a01b0381166110ad5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103cb565b61050e8161119f565b6110be611145565b606580546001600160a01b0319166001600160a01b0392909216919091179055565b60008061110b836040516020016110f791906127a8565b6040516020818303038152906040526119d0565b90508051602082016000f091506001600160a01b03821661113f5760405163046a55db60e11b815260040160405180910390fd5b50919050565b6033546001600160a01b031633146103065760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103cb565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166112185760405162461bcd60e51b81526004016103cb906127ce565b6103066119fc565b6060600061122d83611a2c565b600101905060008167ffffffffffffffff81111561124d5761124d611cb6565b6040519080825280601f01601f191660200182016040528015611277576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846112b0576112b5565b611281565b509392505050565b6040805162040060810190915262040040815260006020909101818152606091808080805b88518110156114245760006001600160a01b03168982815181106113085761130861206b565b6020026020010151600001516001600160a01b0316141561132857611412565b61135789828151811061133d5761133d61206b565b6020026020010151898360048110610afc57610afc61206b565b909350915060ff85168882600481106113725761137261206b565b6020020151604001516113859085612365565b60ff1611156113b6578781600481106113a0576113a061206b565b6020020151604001516113b39084612365565b94505b8360ff168882600481106113cc576113cc61206b565b602002015160200151836113e09190612365565b60ff161115611412578781600481106113fb576113fb61206b565b6020020151602001518261140f9190612365565b93505b8061141c816120ec565b9150506112e2565b506040805180820190915260068152651e17b9bb339f60d11b602082015261144d9086906117dc565b6114598360ff16611220565b6114658560ff16611220565b611476610c2660ff8716600a61238a565b611487610c2660ff8916600a61238a565b8860405160200161149c95949392919061241e565b6040516020818303038152906040529550505050505092915050565b60608151600014156114d857505060408051602081019091526000815290565b600060405180606001604052806040815260200161291c60409139905060006003845160026115079190612819565b6115119190612831565b61151c90600461238a565b67ffffffffffffffff81111561153457611534611cb6565b6040519080825280601f01601f19166020018201604052801561155e576020820181803683370190505b509050600182016020820185865187015b808210156115ca576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f811685015184535060018301925061156f565b50506003865106600181146115e657600281146115f957611601565b603d6001830353603d6002830353611601565b603d60018303535b509195945050505050565b6066548351600091829182916001600160a01b03169063265b7f7e9061163190611b05565b88602001516040518363ffffffff1660e01b8152600401611653929190612853565b600060405180830381865afa158015611670573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526116989190810190612879565b9150506000818060200190518101906116b191906126c3565b6040805160008082526065546060830184526020808401848152848601939093528b01518b8501519451633df87b4d60e21b8152959650929461175d946001600160a01b039092169363f7e1ed349361171193899391929160040161263b565b600060405180830381865afa15801561172e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261175691908101906126c3565b87906117dc565b606554604051631becbd1560e11b81526001600160a01b03909116906337d97a2a9061178d908590600401611fb8565b6040805180830381865afa1580156117a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117cd91906124de565b94509450505050935093915050565b601f1982015182518251603f199092019182906117f99083612819565b11156118575760405162461bcd60e51b815260206004820152602760248201527f44796e616d69634275666665723a20417070656e64696e67206f7574206f66206044820152663137bab732399760c91b60648201526084016103cb565b6118618484611b15565b50505050565b61050e8160405160240161187b9190611fb8565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052611b4b565b61050e816040516024016118c091815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f82c50f160e01b179052611b4b565b60408051620400608101825262040040815260006020918201818152835160608181018652838252938101839052938401829052919281906119339086908561160c565b91509150611968604051806040016040528060068152602001651e17b9bb339f60d11b815250846117dc90919063ffffffff16565b6119748160ff16611220565b6119808360ff16611220565b611991610c2660ff8516600a61238a565b6119a2610c2660ff8716600a61238a565b866040516020016119b795949392919061241e565b6040516020818303038152906040529350505050919050565b60608151826040516020016119e69291906128ca565b6040516020818303038152906040529050919050565b600054610100900460ff16611a235760405162461bcd60e51b81526004016103cb906127ce565b6103063361119f565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310611a6b5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611a97576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310611ab557662386f26fc10000830492506010015b6305f5e1008310611acd576305f5e100830492506008015b6127108310611ae157612710830492506004015b60648310611af3576064830492506002015b600a8310611aff576001015b92915050565b6060611aff826001600019611b6c565b8051602082019150808201602084510184015b81841015611b40578351815260209384019301611b28565b505082510190915250565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6060833b80611b8b575050604080516020810190915260008152610c6a565b80841115611ba9575050604080516020810190915260008152610c6a565b83831015611bdb5760405163162544fd60e11b81526004810182905260248101859052604481018490526064016103cb565b8383038482036000828210611bf05782611bf2565b815b60408051603f8301601f19168101909152818152955090508087602087018a3c505050509392505050565b828054611c2990612081565b90600052602060002090601f016020900481019282611c4b5760008555611c91565b82601f10611c6457805160ff1916838001178555611c91565b82800160010185558215611c91579182015b82811115611c91578251825591602001919060010190611c76565b50611c9d929150611ca1565b5090565b5b80821115611c9d5760008155600101611ca2565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611cf557611cf5611cb6565b604052919050565b600067ffffffffffffffff821115611d1757611d17611cb6565b50601f01601f191660200190565b6000611d38611d3384611cfd565b611ccc565b9050828152838383011115611d4c57600080fd5b828260208301376000602084830101529392505050565b600082601f830112611d7457600080fd5b610c6a83833560208501611d25565b600080600060608486031215611d9857600080fd5b833567ffffffffffffffff80821115611db057600080fd5b611dbc87838801611d63565b94506020860135915061ffff82168214611dd557600080fd5b90925060408501359080821115611deb57600080fd5b508401601f81018613611dfd57600080fd5b611e0c86823560208401611d25565b9150509250925092565b600060208284031215611e2857600080fd5b81356001600160a01b0381168114610c6a57600080fd5b60ff8116811461050e57600080fd5b600060608284031215611e6057600080fd5b6040516060810181811067ffffffffffffffff82111715611e8357611e83611cb6565b6040529050808235611e9481611e3f565b81526020830135611ea481611e3f565b60208201526040830135611eb781611e3f565b6040919091015292915050565b600082601f830112611ed557600080fd5b6040516080810181811067ffffffffffffffff82111715611ef857611ef8611cb6565b60405280610180840185811115611f0e57600080fd5b845b8181101561160157611f228782611e4e565b8352602090920191606001611f10565b6000806101a08385031215611f4657600080fd5b82359150611f578460208501611ec4565b90509250929050565b60005b83811015611f7b578181015183820152602001611f63565b838111156118615750506000910152565b60008151808452611fa4816020860160208601611f60565b601f01601f19169290920160200192915050565b602081526000610c6a6020830184611f8c565b60008060006102008486031215611fe157600080fd5b611feb8585611ec4565b9250610180840135611ffc81611e3f565b915061200c856101a08601611e4e565b90509250925092565b60006020828403121561202757600080fd5b813567ffffffffffffffff81111561203e57600080fd5b61204a84828501611d63565b949350505050565b60006020828403121561206457600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b600181811c9082168061209557607f821691505b6020821081141561113f57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff8114156120e3576120e36120b6565b60010192915050565b6000600019821415612100576121006120b6565b5060010190565b7f226465736372697074696f6e22203a202241207069656365207468617420636181526d371031329031b7b6b134b732b21160911b6020820152602e0190565b7519185d184e985c1c1b1a58d85d1a5bdb8bda9cdbdb8b60521b8152607b60f81b601682015272226e616d6522203a2022436f6c6c616765202360681b6017820152815160009061219f81602a850160208701611f60565b6201116160ed1b602a9184019182015261204a602d8201612107565b600082516121cd818460208701611f60565b6e2c2261747472696275746573223a5b60881b920191825250600f01919050565b60008251612200818460208701611f60565b600b60fa1b920191825250600101919050565b60008451612225818460208901611f60565b757b2274726169745f74797065223a224c61796572202360501b9083019081528451612258816016840160208901611f60565b6a1116113b30b63ab2911d1160a91b601692909101918201528351612284816021840160208801611f60565b61227d60f01b6021929091019182015260230195945050505050565b600082516122b2818460208701611f60565b605d60f81b920191825250600101919050565b7f2c22696d616765223a2022646174613a696d6167652f7376672b786d6c3b62618152641cd94d8d0b60da1b602082015260250190565b6000835161230e818460208801611f60565b6123198184016122c5565b9050835161232b818360208801611f60565b601160f91b9101908152600101949350505050565b60008251612352818460208701611f60565b607d60f81b920191825250600101919050565b600060ff821660ff84168060ff03821115612382576123826120b6565b019392505050565b60008160001904831182151516156123a4576123a46120b6565b500290565b7f3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323081527f30302f737667222073686170652d72656e646572696e673d226372697370456460208201527f676573222076657273696f6e3d22312e31222076696577426f783d2230203020604082015260600190565b6000612429826123a9565b8751612439818360208c01611f60565b600160fd1b91019081528651612456816001840160208b01611f60565b6811103bb4b23a341e9160b91b60019290910191820152855161248081600a840160208a01611f60565b6911103432b4b3b43a1e9160b11b600a929091019182015284516124ab816014840160208901611f60565b620111f160ed1b6014929091019182015283516124cf816017840160208801611f60565b01601701979650505050505050565b600080604083850312156124f157600080fd5b82516124fc81611e3f565b602084015190925061250d81611e3f565b809150509250929050565b6000612523826123a9565b8651612533818360208b01611f60565b600160fd1b91019081528551612550816001840160208a01611f60565b6811103bb4b23a341e9160b91b60019290910191820152845161257a81600a840160208901611f60565b6911103432b4b3b43a1e9160b11b600a929091019182015283516125a5816014840160208801611f60565b620111f160ed1b601492909101918201526017019695505050505050565b805160408084528151908401819052600091602091908201906060860190845b818110156126095783516001600160e81b031916835292840192918401916001016125e3565b50508285015191506006821061262f57634e487b7160e01b600052602160045260246000fd5b94909101525090919050565b60808152600061264e6080830187611f8c565b828103602084015261266081876125c3565b91505060ff8416604083015260ff8316606083015295945050505050565b600082601f83011261268f57600080fd5b815161269d611d3382611cfd565b8181528460208386010111156126b257600080fd5b61204a826020830160208701611f60565b6000602082840312156126d557600080fd5b815167ffffffffffffffff8111156126ec57600080fd5b61204a8482850161267e565b7519185d184e985c1c1b1a58d85d1a5bdb8bda9cdbdb8b60521b8152607b60f81b601682015269113730b6b291101d101160b11b60178201528151600090612747816021850160208701611f60565b6201116160ed1b60219184019182015261204a60248201612107565b60008351612775818460208801611f60565b6127808184016122c5565b90508351612792818360208801611f60565b61227d60f01b9101908152600201949350505050565b60008152600082516127c1816001850160208701611f60565b9190910160010192915050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000821982111561282c5761282c6120b6565b500190565b60008261284e57634e487b7160e01b600052601260045260246000fd5b500490565b6040815260006128666040830185611f8c565b905061ffff831660208301529392505050565b6000806040838503121561288c57600080fd5b825161289781611e3f565b602084015190925067ffffffffffffffff8111156128b457600080fd5b6128c08582860161267e565b9150509250929050565b606360f81b815260e083901b6001600160e01b03191660018201526880600e6000396000f360b81b6005820152815160009061290d81600e850160208701611f60565b91909101600e01939250505056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa26469706673582212207924a469f008f9a8208b4d318a659d06091ed2963f68fdc87e114323a2ee54fa64736f6c634300080c0033";

type RenderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RenderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Render__factory extends ContractFactory {
  constructor(...args: RenderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Render> {
    return super.deploy(overrides || {}) as Promise<Render>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Render {
    return super.attach(address) as Render;
  }
  override connect(signer: Signer): Render__factory {
    return super.connect(signer) as Render__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RenderInterface {
    return new utils.Interface(_abi) as RenderInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Render {
    return new Contract(address, _abi, signerOrProvider) as Render;
  }
}
