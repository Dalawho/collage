/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Render,
  RenderInterface,
} from "../../../contracts/Render.sol/Render";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_size",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_end",
        type: "uint256",
      },
    ],
    name: "InvalidCodeAtRange",
    type: "error",
  },
  {
    inputs: [],
    name: "WriteError",
    type: "error",
  },
  {
    inputs: [],
    name: "onlyPiecesCanAddTokens",
    type: "error",
  },
  {
    inputs: [],
    name: "tokenDoesntExists",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "uint16",
        name: "destLen",
        type: "uint16",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "addToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getSVGForBytes",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gfx",
    outputs: [
      {
        internalType: "contract IExquisiteGraphics",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "inflateLib",
    outputs: [
      {
        internalType: "contract IInflator",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pieces",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "layerId",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "xOffset",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "yOffset",
            type: "uint8",
          },
        ],
        internalType: "struct Render.LayerStruct[4]",
        name: "layerIds",
        type: "tuple[4]",
      },
    ],
    name: "previewCollage",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newGfx",
        type: "address",
      },
    ],
    name: "setGfx",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newInflate",
        type: "address",
      },
    ],
    name: "setInflator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newPieces",
        type: "address",
      },
    ],
    name: "setPieces",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "layerId",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "xOffset",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "yOffset",
            type: "uint8",
          },
        ],
        internalType: "struct Render.LayerStruct[4]",
        name: "layerIds",
        type: "tuple[4]",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612954806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806388e5934311610097578063c87b56dd11610066578063c87b56dd146101df578063eaea130f146101f2578063f2fde38b14610205578063fc7934131461021857600080fd5b806388e59343146101955780638da5cb5b146101a8578063999694e7146101b9578063bfec157f146101cc57600080fd5b8063715018a6116100d3578063715018a61461015257806372aa4a961461015a5780637f0cda331461016d5780638129fc1c1461018d57600080fd5b806317674036146100fa57806318fb8d3c1461012a57806356ec592f1461013f575b600080fd5b60675461010d906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61013d610138366004611db7565b61022b565b005b60655461010d906001600160a01b031681565b61013d6102f4565b61013d610168366004611e4a565b610308565b61018061017b366004611f1e565b610332565b6040516101219190611f93565b61013d6106fa565b6101806101a3366004611fa6565b6108d9565b6033546001600160a01b031661010d565b60665461010d906001600160a01b031681565b6101806101da366004611fd4565b610c53565b6101806101ed366004612011565b610eab565b61013d610200366004611e4a565b610ff8565b61013d610213366004611e4a565b611022565b61013d610226366004611e4a565b611098565b6067546001600160a01b0316331461025657604051639f9aec5d60e01b815260040160405180910390fd5b6068604051806060016040528061026c866110c2565b6001600160a01b03908116825261ffff80871660208085019190915260409384018790528554600181810188556000978852968290208651600290920201805487840151909416600160a01b026001600160b01b03199094169190941617919091178255918301518051939491936102ec93928501929190910190611c05565b505050505050565b6102fc611127565b6103066000611181565b565b610310611127565b606680546001600160a01b0319166001600160a01b0392909216919091179055565b60408051600480825260a082019092526060916000918291816020015b6040805160608082018352600080835260208301529181019190915281526020019060019003908161034f57905050905060005b60048110156104ef5760688582600481106103a0576103a061202a565b60200201516000015160ff16815481106103bc576103bc61202a565b600091825260209182902060408051606081018252600290930290910180546001600160a01b038116845261ffff600160a01b90910416938301939093526001830180549293929184019161041090612040565b80601f016020809104026020016040519081016040528092919081815260200182805461043c90612040565b80156104895780601f1061045e57610100808354040283529160200191610489565b820191906000526020600020905b81548152906001019060200180831161046c57829003601f168201915b5050505050815250508282815181106104a4576104a461202a565b60200260200101819052508481600481106104c1576104c161202a565b60200201515160ff16156104dd57826104d98161208b565b9350505b806104e7816120ab565b915050610383565b50604080516204006081019091526204004081526000602090910181815290808080805b86518110156106605760006001600160a01b03168782815181106105395761053961202a565b6020026020010151600001516001600160a01b031614156105595761064e565b61059387828151811061056e5761056e61202a565b60200260200101518b83600481106105885761058861202a565b6020020151886111d3565b909350915060ff85168a82600481106105ae576105ae61202a565b6020020151604001516105c190856120c6565b60ff1611156105f2578981600481106105dc576105dc61202a565b6020020151604001516105ef90846120c6565b94505b8360ff168a82600481106106085761060861202a565b6020020151602001518361061c91906120c6565b60ff16111561064e578981600481106106375761063761202a565b6020020151602001518261064b91906120c6565b93505b80610658816120ab565b915050610513565b506040805180820190915260068152651e17b9bb339f60d11b60208201526106899086906113a3565b6106958360ff1661142e565b6106a18560ff1661142e565b6106b76106b260ff8716600a6120eb565b61142e565b6106c86106b260ff8916600a6120eb565b886040516020016106dd95949392919061217f565b604051602081830303815290604052975050505050505050919050565b600054610100900460ff161580801561071a5750600054600160ff909116105b806107345750303b158015610734575060005460ff166001145b61079c5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156107bf576000805461ff0019166101001790555b6107c76114cb565b604080516060810182526000808252602080830182815284518083018652838152948401948552606880546001810182559352835160029093027fa2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c2209775381018054925161ffff16600160a01b026001600160b01b03199093166001600160a01b039590951694909417919091178355935180519394929361088d937fa2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c2209775401929190910190611c05565b50505080156108d6576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b60408051600480825260a082019092526060916000918291816020015b604080516060808201835260008083526020830152918101919091528152602001906001900390816108f657905050905060005b6004811015610a965760688582600481106109475761094761202a565b60200201516000015160ff16815481106109635761096361202a565b600091825260209182902060408051606081018252600290930290910180546001600160a01b038116845261ffff600160a01b9091041693830193909352600183018054929392918401916109b790612040565b80601f01602080910402602001604051908101604052809291908181526020018280546109e390612040565b8015610a305780601f10610a0557610100808354040283529160200191610a30565b820191906000526020600020905b815481529060010190602001808311610a1357829003601f168201915b505050505081525050828281518110610a4b57610a4b61202a565b6020026020010181905250848160048110610a6857610a6861202a565b60200201515160ff1615610a845782610a808161208b565b9350505b80610a8e816120ab565b91505061092a565b506000610aa28661142e565b604051602001610ab29190612283565b604051602081830303815290604052905080604051602001610ad491906122f7565b604051602081830303815290604052905060005b82518160ff161015610bc45760006001600160a01b0316838260ff1681518110610b1457610b1461202a565b6020026020010151600001516001600160a01b03161415610b3457610bb2565b60ff811615610b605781604051602001610b4e919061232a565b60405160208183030381529060405291505b81610b6d8260ff1661142e565b848360ff1681518110610b8257610b8261202a565b602002602001015160400151604051602001610ba09392919061234f565b60405160208183030381529060405291505b80610bbc8161208b565b915050610ae8565b5080604051602001610bd691906123dc565b60405160208183030381529060405290508260ff16600014610c285780610c05610c0084886114fa565b6116f5565b604051602001610c16929190612438565b60405160208183030381529060405290505b80604051602001610c39919061247c565b60408051808303601f190181529190529695505050505050565b604080516204006081018252620400408152600060209091018181526065549251631becbd1560e11b815260609391929182916001600160a01b03909116906337d97a2a90610ca6908890600401611f93565b6040805180830381865afa158015610cc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce691906124a1565b91509150610d22604051806040016040528060178152602001766d61646520697420706173742064696d656e73696f6e7360481b815250611849565b610d2e8260ff1661188c565b610d3a8160ff1661188c565b610da1610d498260ff1661142e565b610d558460ff1661142e565b610d666106b260ff8616600a6120eb565b610d776106b260ff8816600a6120eb565b604051602001610d8a94939291906124db565b60408051601f1981840301815291905284906113a3565b6040805160008152606081018252601760208201908152766d61646520697420706173742064696d656e73696f6e7360481b9282019290925290610de490611849565b6065546040805180820182528381526000602082018190529151633df87b4d60e21b8152610e79936001600160a01b03169263f7e1ed3492610e2d928c929081906004016125fe565b600060405180830381865afa158015610e4a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e729190810190612686565b85906113a3565b6040805180820190915260068152651e17b9bb339f60d11b6020820152610ea19085906113a3565b5091949350505050565b6060600060688381548110610ec257610ec261202a565b600091825260209182902060408051606081018252600290930290910180546001600160a01b038116845261ffff600160a01b909104169383019390935260018301805492939291840191610f1690612040565b80601f0160208091040260200160405190810160405280929190818152602001828054610f4290612040565b8015610f8f5780601f10610f6457610100808354040283529160200191610f8f565b820191906000526020600020905b815481529060010190602001808311610f7257829003601f168201915b505050505081525050905060008160400151604051602001610fb191906126bb565b604051602081830303815290604052905080610fcf610c00846118d1565b604051602001610fe0929190612726565b60408051601f19818403018152919052949350505050565b611000611127565b606780546001600160a01b0319166001600160a01b0392909216919091179055565b61102a611127565b6001600160a01b03811661108f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610793565b6108d681611181565b6110a0611127565b606580546001600160a01b0319166001600160a01b0392909216919091179055565b6000806110ed836040516020016110d9919061276b565b6040516020818303038152906040526119b2565b90508051602082016000f091506001600160a01b0382166111215760405163046a55db60e11b815260040160405180910390fd5b50919050565b6033546001600160a01b031633146103065760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610793565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6066548351600091829182916001600160a01b03169063265b7f7e906111f8906119de565b88602001516040518363ffffffff1660e01b815260040161121a929190612791565b600060405180830381865afa158015611237573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261125f91908101906127b7565b9150506000818060200190518101906112789190612686565b6040805160008082526065546060830184526020808401848152848601939093528b01518b8501519451633df87b4d60e21b81529596509294611324946001600160a01b039092169363f7e1ed34936112d89389939192916004016125fe565b600060405180830381865afa1580156112f5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261131d9190810190612686565b87906113a3565b606554604051631becbd1560e11b81526001600160a01b03909116906337d97a2a90611354908590600401611f93565b6040805180830381865afa158015611370573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061139491906124a1565b94509450505050935093915050565b601f1982015182518251603f199092019182906113c09083612808565b111561141e5760405162461bcd60e51b815260206004820152602760248201527f44796e616d69634275666665723a20417070656e64696e67206f7574206f66206044820152663137bab732399760c91b6064820152608401610793565b61142884846119f4565b50505050565b6060600061143b83611a2a565b600101905060008167ffffffffffffffff81111561145b5761145b611c9e565b6040519080825280601f01601f191660200182016040528015611485576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846114be576114c3565b61148f565b509392505050565b600054610100900460ff166114f25760405162461bcd60e51b815260040161079390612820565b610306611b02565b6040805162040060810190915262040040815260006020909101818152606091808080805b88518110156116615760006001600160a01b03168982815181106115455761154561202a565b6020026020010151600001516001600160a01b031614156115655761164f565b61159489828151811061157a5761157a61202a565b60200260200101518983600481106105885761058861202a565b909350915060ff85168882600481106115af576115af61202a565b6020020151604001516115c290856120c6565b60ff1611156115f3578781600481106115dd576115dd61202a565b6020020151604001516115f090846120c6565b94505b8360ff168882600481106116095761160961202a565b6020020151602001518361161d91906120c6565b60ff16111561164f578781600481106116385761163861202a565b6020020151602001518261164c91906120c6565b93505b80611659816120ab565b91505061151f565b506040805180820190915260068152651e17b9bb339f60d11b602082015261168a9086906113a3565b6116968360ff1661142e565b6116a28560ff1661142e565b6116b36106b260ff8716600a6120eb565b6116c46106b260ff8916600a6120eb565b886040516020016116d995949392919061217f565b6040516020818303038152906040529550505050505092915050565b606081516000141561171557505060408051602081019091526000815290565b60006040518060600160405280604081526020016128df60409139905060006003845160026117449190612808565b61174e919061286b565b6117599060046120eb565b67ffffffffffffffff81111561177157611771611c9e565b6040519080825280601f01601f19166020018201604052801561179b576020820181803683370190505b509050600182016020820185865187015b80821015611807576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f81168501518453506001830192506117ac565b505060038651066001811461182357600281146118365761183e565b603d6001830353603d600283035361183e565b603d60018303535b509195945050505050565b6108d68160405160240161185d9190611f93565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052611b32565b6108d6816040516024016118a291815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f82c50f160e01b179052611b32565b6040805162040060810182526204004081526000602091820181815283516060818101865283825293810183905293840182905291928190611915908690856111d3565b9150915061194a604051806040016040528060068152602001651e17b9bb339f60d11b815250846113a390919063ffffffff16565b6119568160ff1661142e565b6119628360ff1661142e565b6119736106b260ff8516600a6120eb565b6119846106b260ff8716600a6120eb565b8660405160200161199995949392919061217f565b6040516020818303038152906040529350505050919050565b60608151826040516020016119c892919061288d565b6040516020818303038152906040529050919050565b60606119ee826001600019611b53565b92915050565b8051602082019150808201602084510184015b81841015611a1f578351815260209384019301611a07565b505082510190915250565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310611a695772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611a95576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310611ab357662386f26fc10000830492506010015b6305f5e1008310611acb576305f5e100830492506008015b6127108310611adf57612710830492506004015b60648310611af1576064830492506002015b600a83106119ee5760010192915050565b600054610100900460ff16611b295760405162461bcd60e51b815260040161079390612820565b61030633611181565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6060833b80611b72575050604080516020810190915260008152611bfe565b80841115611b90575050604080516020810190915260008152611bfe565b83831015611bc25760405163162544fd60e11b8152600481018290526024810185905260448101849052606401610793565b8383038482036000828210611bd75782611bd9565b815b60408051603f8301601f19168101909152818152955090508087602087018a3c505050505b9392505050565b828054611c1190612040565b90600052602060002090601f016020900481019282611c335760008555611c79565b82601f10611c4c57805160ff1916838001178555611c79565b82800160010185558215611c79579182015b82811115611c79578251825591602001919060010190611c5e565b50611c85929150611c89565b5090565b5b80821115611c855760008155600101611c8a565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715611cd757611cd7611c9e565b60405290565b6040516060810167ffffffffffffffff81118282101715611cd757611cd7611c9e565b604051601f8201601f1916810167ffffffffffffffff81118282101715611d2957611d29611c9e565b604052919050565b600067ffffffffffffffff821115611d4b57611d4b611c9e565b50601f01601f191660200190565b6000611d6c611d6784611d31565b611d00565b9050828152838383011115611d8057600080fd5b828260208301376000602084830101529392505050565b600082601f830112611da857600080fd5b611bfe83833560208501611d59565b600080600060608486031215611dcc57600080fd5b833567ffffffffffffffff80821115611de457600080fd5b611df087838801611d97565b94506020860135915061ffff82168214611e0957600080fd5b90925060408501359080821115611e1f57600080fd5b508401601f81018613611e3157600080fd5b611e4086823560208401611d59565b9150509250925092565b600060208284031215611e5c57600080fd5b81356001600160a01b0381168114611bfe57600080fd5b60ff811681146108d657600080fd5b600082601f830112611e9357600080fd5b611e9b611cb4565b80610180840185811115611eae57600080fd5b845b81811015611f135760608188031215611ec95760008081fd5b611ed1611cdd565b8135611edc81611e73565b8152602082810135611eed81611e73565b82820152604083810135611f0081611e73565b9083015290855290930192606001611eb0565b509095945050505050565b60006101808284031215611f3157600080fd5b611bfe8383611e82565b60005b83811015611f56578181015183820152602001611f3e565b838111156114285750506000910152565b60008151808452611f7f816020860160208601611f3b565b601f01601f19169290920160200192915050565b602081526000611bfe6020830184611f67565b6000806101a08385031215611fba57600080fd5b82359150611fcb8460208501611e82565b90509250929050565b600060208284031215611fe657600080fd5b813567ffffffffffffffff811115611ffd57600080fd5b61200984828501611d97565b949350505050565b60006020828403121561202357600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b600181811c9082168061205457607f821691505b6020821081141561112157634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff8114156120a2576120a2612075565b60010192915050565b60006000198214156120bf576120bf612075565b5060010190565b600060ff821660ff84168060ff038211156120e3576120e3612075565b019392505050565b600081600019048311821515161561210557612105612075565b500290565b7f3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323081527f30302f737667222073686170652d72656e646572696e673d226372697370456460208201527f676573222076657273696f6e3d22312e31222076696577426f783d2230203020604082015260600190565b600061218a8261210a565b875161219a818360208c01611f3b565b600160fd1b910190815286516121b7816001840160208b01611f3b565b6811103bb4b23a341e9160b91b6001929091019182015285516121e181600a840160208a01611f3b565b6911103432b4b3b43a1e9160b11b600a9290910191820152845161220c816014840160208901611f3b565b600181830101915050620111f160ed1b60138201528351612234816016840160208801611f3b565b01601601979650505050505050565b7f226465736372697074696f6e22203a202241207069656365207468617420636181526d371031329031b7b6b134b732b21160911b6020820152602e0190565b7519185d184e985c1c1b1a58d85d1a5bdb8bda9cdbdb8b60521b8152607b60f81b601682015272226e616d6522203a2022436f6c6c616765202360681b601782015281516000906122db81602a850160208701611f3b565b6201116160ed1b602a91840191820152612009602d8201612243565b60008251612309818460208701611f3b565b6e2c2261747472696275746573223a5b60881b920191825250600f01919050565b6000825161233c818460208701611f3b565b600b60fa1b920191825250600101919050565b60008451612361818460208901611f3b565b757b2274726169745f74797065223a224c61796572202360501b9083019081528451612394816016840160208901611f3b565b6a1116113b30b63ab2911d1160a91b6016929091019182015283516123c0816021840160208801611f3b565b61227d60f01b6021929091019182015260230195945050505050565b600082516123ee818460208701611f3b565b605d60f81b920191825250600101919050565b7f2c22696d616765223a2022646174613a696d6167652f7376672b786d6c3b62618152641cd94d8d0b60da1b602082015260250190565b6000835161244a818460208801611f3b565b612455818401612401565b90508351612467818360208801611f3b565b601160f91b9101908152600101949350505050565b6000825161248e818460208701611f3b565b607d60f81b920191825250600101919050565b600080604083850312156124b457600080fd5b82516124bf81611e73565b60208401519092506124d081611e73565b809150509250929050565b60006124e68261210a565b86516124f6818360208b01611f3b565b600160fd1b91019081528551612513816001840160208a01611f3b565b6811103bb4b23a341e9160b91b60019290910191820152845161253d81600a840160208901611f3b565b6911103432b4b3b43a1e9160b11b600a92909101918201528351612568816014840160208801611f3b565b620111f160ed1b601492909101918201526017019695505050505050565b805160408084528151908401819052600091602091908201906060860190845b818110156125cc5783516001600160e81b031916835292840192918401916001016125a6565b5050828501519150600682106125f257634e487b7160e01b600052602160045260246000fd5b94909101525090919050565b6080815260006126116080830187611f67565b82810360208401526126238187612586565b91505060ff8416604083015260ff8316606083015295945050505050565b600082601f83011261265257600080fd5b8151612660611d6782611d31565b81815284602083860101111561267557600080fd5b612009826020830160208701611f3b565b60006020828403121561269857600080fd5b815167ffffffffffffffff8111156126af57600080fd5b61200984828501612641565b7519185d184e985c1c1b1a58d85d1a5bdb8bda9cdbdb8b60521b8152607b60f81b601682015269113730b6b291101d101160b11b6017820152815160009061270a816021850160208701611f3b565b6201116160ed1b60219184019182015261200960248201612243565b60008351612738818460208801611f3b565b612743818401612401565b90508351612755818360208801611f3b565b61227d60f01b9101908152600201949350505050565b6000815260008251612784816001850160208701611f3b565b9190910160010192915050565b6040815260006127a46040830185611f67565b905061ffff831660208301529392505050565b600080604083850312156127ca57600080fd5b82516127d581611e73565b602084015190925067ffffffffffffffff8111156127f257600080fd5b6127fe85828601612641565b9150509250929050565b6000821982111561281b5761281b612075565b500190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008261288857634e487b7160e01b600052601260045260246000fd5b500490565b606360f81b815260e083901b6001600160e01b03191660018201526880600e6000396000f360b81b600582015281516000906128d081600e850160208701611f3b565b91909101600e01939250505056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa26469706673582212206098b3d0e0f0c390f2498d3df3ade8932050967fd940674f93d1c4e2b890680c64736f6c634300080c0033";

type RenderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RenderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Render__factory extends ContractFactory {
  constructor(...args: RenderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Render> {
    return super.deploy(overrides || {}) as Promise<Render>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Render {
    return super.attach(address) as Render;
  }
  override connect(signer: Signer): Render__factory {
    return super.connect(signer) as Render__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RenderInterface {
    return new utils.Interface(_abi) as RenderInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Render {
    return new Contract(address, _abi, signerOrProvider) as Render;
  }
}
