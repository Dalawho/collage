/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Pieces,
  PiecesInterface,
} from "../../../contracts/Pieces.sol/Pieces";

const _abi = [
  {
    inputs: [],
    name: "notBurnAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "payRightAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "toManyTokens",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        components: [
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "maxSupply",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "supplyMinted",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "royalties",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "maxPerWallet",
            type: "uint8",
          },
          {
            internalType: "uint64",
            name: "price",
            type: "uint64",
          },
        ],
        indexed: false,
        internalType: "struct SharedStructs.LayerInfo",
        name: "layer",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "string",
        name: "collection",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "category",
        type: "string",
      },
    ],
    name: "ArtworkAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "TokenBurned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "ADD_ARTWORK_PRICE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_LAYERS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "burnerAllowed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "maxSupply",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "supplyMinted",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "royalties",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "maxPerWallet",
            type: "uint8",
          },
          {
            internalType: "uint64",
            name: "price",
            type: "uint64",
          },
        ],
        internalType: "struct SharedStructs.LayerInfo",
        name: "_layer",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "uint16",
        name: "destLen",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "imageType",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "xSize",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "ySize",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_royaltyReciever",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mintTo",
        type: "address",
      },
      {
        internalType: "string",
        name: "_collection",
        type: "string",
      },
      {
        internalType: "string",
        name: "_category",
        type: "string",
      },
    ],
    name: "createToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getLayerData",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "maxSupply",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "supplyMinted",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "royalties",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "maxPerWallet",
            type: "uint8",
          },
          {
            internalType: "uint64",
            name: "price",
            type: "uint64",
          },
        ],
        internalType: "struct SharedStructs.LayerInfo",
        name: "",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8[16]",
        name: "layerIds",
        type: "uint8[16]",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "totalPrice",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16[16]",
        name: "layerIds",
        type: "uint16[16]",
      },
    ],
    name: "getPriceAndBurn",
    outputs: [
      {
        internalType: "uint256",
        name: "totalPrice",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "layers",
    outputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "maxSupply",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "supplyMinted",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "royalties",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "maxPerWallet",
        type: "uint8",
      },
      {
        internalType: "uint64",
        name: "price",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "amount",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "render",
    outputs: [
      {
        internalType: "contract IRender",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "royaltyReciever",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "setAddArtworkPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newBurner",
        type: "address",
      },
    ],
    name: "setBurner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newRender",
        type: "address",
      },
    ],
    name: "setRender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newuri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061363d806100206000396000f3fe6080604052600436106101f85760003560e01c80638da5cb5b1161010d578063c87b56dd116100a0578063f0c136cb1161006f578063f0c136cb1461067a578063f21147e81461069a578063f242432a146106ba578063f2fde38b146106da578063f5298aca146106fa57600080fd5b8063c87b56dd146105dd578063d0a22537146105fd578063d607497a14610610578063e985e9c51461063157600080fd5b8063adc2b6cb116100dc578063adc2b6cb14610536578063bd85b03914610564578063c3db7e4c14610591578063c829b0e3146105c857600080fd5b80638da5cb5b1461046c5780639e9198c21461048a578063a22cb465146104f6578063a996d6ce1461051657600080fd5b80633ccfd60b116101905780636b20c4541161015f5780636b20c454146103d6578063715018a6146103f65780637753358d1461040b5780638129fc1c146104445780638d29dbad1461045957600080fd5b80633ccfd60b1461034e5780634e1273f4146103635780634f558e791461039057806362963dc2146103bf57600080fd5b80630e89341c116101cc5780630e89341c146102a257806319c3c0ab146102cf5780632a55205a146102ef5780632eb2c2d61461032e57600080fd5b8062fdd58e146101fd57806301ffc9a71461023057806302fe5305146102605780630448d60314610282575b600080fd5b34801561020957600080fd5b5061021d6102183660046126d9565b61071a565b6040519081526020015b60405180910390f35b34801561023c57600080fd5b5061025061024b366004612719565b6107b5565b6040519015158152602001610227565b34801561026c57600080fd5b5061028061027b366004612802565b6107e0565b005b34801561028e57600080fd5b5061021d61029d366004612850565b6107f4565b3480156102ae57600080fd5b506102c26102bd36600461286d565b6109c7565b60405161022791906128de565b3480156102db57600080fd5b5061021d6102ea366004612850565b610a5b565b3480156102fb57600080fd5b5061030f61030a3660046128f1565b610b76565b604080516001600160a01b039093168352602083019190915201610227565b34801561033a57600080fd5b506102806103493660046129a7565b610c5b565b34801561035a57600080fd5b50610280610ca7565b34801561036f57600080fd5b5061038361037e366004612a50565b610cdb565b6040516102279190612b55565b34801561039c57600080fd5b506102506103ab36600461286d565b600090815260fb6020526040902054151590565b3480156103cb57600080fd5b5061021d61012f5481565b3480156103e257600080fd5b506102806103f1366004612b68565b610e04565b34801561040257600080fd5b50610280610e4c565b34801561041757600080fd5b5061012e5461042c906001600160a01b031681565b6040516001600160a01b039091168152602001610227565b34801561045057600080fd5b50610280610e60565b610280610467366004612cac565b6110ab565b34801561047857600080fd5b506097546001600160a01b031661042c565b34801561049657600080fd5b506104aa6104a536600461286d565b61137a565b604080516001600160a01b03909716875260ff95861660208801529385169386019390935290831660608501529190911660808301526001600160401b031660a082015260c001610227565b34801561050257600080fd5b50610280610511366004612dde565b6113e2565b34801561052257600080fd5b50610280610531366004612e1a565b6113f1565b34801561054257600080fd5b5061055661055136600461286d565b61141c565b604051610227929190612e8c565b34801561057057600080fd5b5061021d61057f36600461286d565b600090815260fb602052604090205490565b34801561059d57600080fd5b5061042c6105ac36600461286d565b610131602052600090815260409020546001600160a01b031681565b3480156105d457600080fd5b5061021d601081565b3480156105e957600080fd5b506102c26105f836600461286d565b6114f5565b61028061060b366004612eb2565b611568565b34801561061c57600080fd5b5061012d5461042c906001600160a01b031681565b34801561063d57600080fd5b5061025061064c366004612f19565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205460ff1690565b34801561068657600080fd5b50610280610695366004612e1a565b611752565b3480156106a657600080fd5b506102806106b536600461286d565b61177d565b3480156106c657600080fd5b506102806106d5366004612f4c565b61178b565b3480156106e657600080fd5b506102806106f5366004612e1a565b6117d0565b34801561070657600080fd5b50610280610715366004612fb0565b611846565b60006001600160a01b03831661078a5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b5060008181526065602090815260408083206001600160a01b03861684529091529020545b92915050565b60006107c0826118ac565b806107af57506001600160e01b0319821663152a902d60e11b1492915050565b6107e86118fc565b6107f181611956565b50565b6000805b60108110156109c15782816010811061081357610813612fe3565b6020020160208101906108269190612ff9565b61ffff16610833576109af565b600061013084836010811061084a5761084a612fe3565b60200201602081019061085d9190612ff9565b61ffff168154811061087157610871612fe3565b60009182526020918290206040805160c08101825291909201546001600160a01b038116825260ff600160a01b82048116948301859052600160a81b82048116938301849052600160b01b820481166060840152600160b81b82041660808301526001600160401b03600160c01b9091041660a082015292506108f590600161302a565b60ff161115610917576040516341a5303b60e11b815260040160405180910390fd5b600161013085846010811061092e5761092e612fe3565b6020020160208101906109419190612ff9565b61ffff168154811061095557610955612fe3565b6000918252602090912001805460159061097a908490600160a81b900460ff1661302a565b92506101000a81548160ff021916908360ff1602179055508060a001516001600160401b0316836109ab919061304f565b9250505b806109b981613067565b9150506107f8565b50919050565b6060606780546109d690613082565b80601f0160208091040260200160405190810160405280929190818152602001828054610a0290613082565b8015610a4f5780601f10610a2457610100808354040283529160200191610a4f565b820191906000526020600020905b815481529060010190602001808311610a3257829003601f168201915b50505050509050919050565b6000805b60108110156109c157828160108110610a7a57610a7a612fe3565b602002016020810190610a8d91906130b7565b60ff16610a9957610b64565b6000610130848360108110610ab057610ab0612fe3565b602002016020810190610ac391906130b7565b60ff1681548110610ad657610ad6612fe3565b60009182526020918290206040805160c08101825291909201546001600160a01b038116825260ff600160a01b8204811694830194909452600160a81b8104841692820192909252600160b01b820483166060820152600160b81b820490921660808301526001600160401b03600160c01b9091041660a08201819052909150610b60908461304f565b9250505b80610b6e81613067565b915050610a5f565b60008060006101308581548110610b8f57610b8f612fe3565b600091825260208083206040805160c08101825293909101546001600160a01b038082168552600160a01b820460ff90811686860152600160a81b8304811686850152600160b01b830481166060870152600160b81b8304166080860152600160c01b9091046001600160401b031660a085015289855261013190925290922054909250168015610c205780610c23565b81515b6064600a846060015160ff1688610c3a91906130d2565b610c4491906130f1565b610c4e91906130f1565b9350935050509250929050565b6001600160a01b038516331480610c775750610c77853361064c565b610c935760405162461bcd60e51b815260040161078190613113565b610ca08585858585611969565b5050505050565b610caf6118fc565b60405133904780156108fc02916000818181858888f193505050501580156107f1573d6000803e3d6000fd5b60608151835114610d405760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610781565b600083516001600160401b03811115610d5b57610d5b61273d565b604051908082528060200260200182016040528015610d84578160200160208202803683370190505b50905060005b8451811015610dfc57610dcf858281518110610da857610da8612fe3565b6020026020010151858381518110610dc257610dc2612fe3565b602002602001015161071a565b828281518110610de157610de1612fe3565b6020908102919091010152610df581613067565b9050610d8a565b509392505050565b6001600160a01b038316331480610e205750610e20833361064c565b610e3c5760405162461bcd60e51b815260040161078190613113565b610e47838383611b16565b505050565b610e546118fc565b610e5e6000611cb7565b565b600054610100900460ff1615808015610e805750600054600160ff909116105b80610e9a5750303b158015610e9a575060005460ff166001145b610efd5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610781565b6000805460ff191660011790558015610f20576000805461ff0019166101001790555b610f476040518060400160405280600681526020016550696563657360d01b815250611d09565b610f4f611d39565b610f57611d60565b610f5f611d39565b6040805160c081018252600080825260208201818152928201818152606083018281526080840183815260a085018481526101308054600181018255955294517f2f605e086faac1d93117bbfbc18835d434e9405fadc1ca66faf4b864746daf349094018054965193519251915195516001600160401b0316600160c01b026001600160c01b0360ff978816600160b81b02166001600160b81b03938816600160b01b0260ff60b01b19958916600160a81b029590951661ffff60a81b1998909616600160a01b026001600160a81b03199099166001600160a01b0390971696909617979097179590951692909217171617919091179055662386f26fc1000061012f5580156107f1576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b61012f5434146110ce576040516333a868c560e11b815260040160405180910390fd5b6000610130805490509050338c600001906001600160a01b031690816001600160a01b0316815250506101308c9080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160000160146101000a81548160ff021916908360ff16021790555060408201518160000160156101000a81548160ff021916908360ff16021790555060608201518160000160166101000a81548160ff021916908360ff16021790555060808201518160000160176101000a81548160ff021916908360ff16021790555060a08201518160000160186101000a8154816001600160401b0302191690836001600160401b03160217905550505061012d60009054906101000a90046001600160a01b03166001600160a01b0316632a2b704b8c8c8c8c8c8c6040518763ffffffff1660e01b815260040161124c96959493929190613161565b600060405180830381600087803b15801561126657600080fd5b505af115801561127a573d6000803e3d6000fd5b505050506001600160a01b038516156112b65760008181526101316020526040902080546001600160a01b0319166001600160a01b0387161790555b807fa26b56e70a3fb4d2d1400201d2a4a969ece618b9b33cf299a4370cfb38f8d548878e86866040516112ec94939291906131b8565b60405180910390a260408c015160ff161561136c576001600160a01b0384166113405761133b33828e6040015160ff16604051806040016040528060018152602001600360fc1b815250611d8f565b61136c565b61136c84828e6040015160ff16604051806040016040528060018152602001600360fc1b815250611d8f565b505050505050505050505050565b610130818154811061138b57600080fd5b6000918252602090912001546001600160a01b038116915060ff600160a01b8204811691600160a81b8104821691600160b01b8204811691600160b81b8104909116906001600160401b03600160c01b9091041686565b6113ed338383611eab565b5050565b6113f96118fc565b61012e80546001600160a01b0319166001600160a01b0392909216919091179055565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a08101919091526000610130838154811061146457611464612fe3565b60009182526020808320958352610131815260409283902054835160c08101855292909601546001600160a01b038082168452600160a01b820460ff90811693850193909352600160a81b8204831694840194909452600160b01b810482166060840152600160b81b81049091166080830152600160c01b90046001600160401b031660a082015294931692915050565b61012d5460405163c87b56dd60e01b8152600481018390526060916001600160a01b03169063c87b56dd90602401600060405180830381865afa158015611540573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107af919081019061320d565b6000610130848154811061157e5761157e612fe3565b60009182526020918290206040805160c08101825292909101546001600160a01b0381168352600160a01b810460ff90811694840194909452600160a81b8104841691830191909152600160b01b810483166060830152600160b81b810483166080830152600160c01b90046001600160401b031660a082018190529092506116089185166130d2565b3414611627576040516333a868c560e11b815260040160405180910390fd5b806020015160ff1681604001518461163f919061302a565b60ff161115611661576040516341a5303b60e11b815260040160405180910390fd5b82610130858154811061167657611676612fe3565b6000918252602090912001805460159061169b908490600160a81b900460ff1661302a565b92506101000a81548160ff021916908360ff1602179055506116c285858560ff1685611d8f565b600084815261013160205260409020546001600160a01b031680156116e75780611711565b61013085815481106116fb576116fb612fe3565b6000918252602090912001546001600160a01b03165b6001600160a01b03166108fc349081150290604051600060405180830381858888f19350505050158015611749573d6000803e3d6000fd5b50505050505050565b61175a6118fc565b61012d80546001600160a01b0319166001600160a01b0392909216919091179055565b6117856118fc565b61012f55565b6001600160a01b0385163314806117a757506117a7853361064c565b6117c35760405162461bcd60e51b815260040161078190613113565b610ca08585858585611f8c565b6117d86118fc565b6001600160a01b03811661183d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610781565b6107f181611cb7565b61012e546001600160a01b031633146118715760405162124a8f60e51b815260040160405180910390fd5b61187c8383836120c8565b60405182907f0c526103b8f47af5516191d0c89a598755bd00faa211a3cb52e4c2cc782f7fe290600090a2505050565b60006001600160e01b03198216636cdb3d1360e11b14806118dd57506001600160e01b031982166303a24d0760e21b145b806107af57506301ffc9a760e01b6001600160e01b03198316146107af565b6097546001600160a01b03163314610e5e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610781565b80516113ed906067906020840190612624565b815183511461198a5760405162461bcd60e51b81526004016107819061328e565b6001600160a01b0384166119b05760405162461bcd60e51b8152600401610781906132d6565b336119bf8187878787876121e4565b60005b8451811015611aa85760008582815181106119df576119df612fe3565b6020026020010151905060008583815181106119fd576119fd612fe3565b60209081029190910181015160008481526065835260408082206001600160a01b038e168352909352919091205490915081811015611a4e5760405162461bcd60e51b81526004016107819061331b565b60008381526065602090815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290611a8d90849061304f565b9250508190555050505080611aa190613067565b90506119c2565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611af8929190613365565b60405180910390a4611b0e8187878787876121f2565b505050505050565b6001600160a01b038316611b3c5760405162461bcd60e51b815260040161078190613393565b8051825114611b5d5760405162461bcd60e51b81526004016107819061328e565b6000339050611b80818560008686604051806020016040528060008152506121e4565b60005b8351811015611c48576000848281518110611ba057611ba0612fe3565b602002602001015190506000848381518110611bbe57611bbe612fe3565b60209081029190910181015160008481526065835260408082206001600160a01b038c168352909352919091205490915081811015611c0f5760405162461bcd60e51b8152600401610781906133d6565b60009283526065602090815260408085206001600160a01b038b1686529091529092209103905580611c4081613067565b915050611b83565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051611c99929190613365565b60405180910390a46040805160208101909152600090525b50505050565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16611d305760405162461bcd60e51b81526004016107819061341a565b6107f18161234e565b600054610100900460ff16610e5e5760405162461bcd60e51b81526004016107819061341a565b600054610100900460ff16611d875760405162461bcd60e51b81526004016107819061341a565b610e5e612375565b6001600160a01b038416611def5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610781565b336000611dfb856123a5565b90506000611e08856123a5565b9050611e19836000898585896121e4565b60008681526065602090815260408083206001600160a01b038b16845290915281208054879290611e4b90849061304f565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611749836000898989896123f0565b816001600160a01b0316836001600160a01b03161415611f1f5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610781565b6001600160a01b03838116600081815260666020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416611fb25760405162461bcd60e51b8152600401610781906132d6565b336000611fbe856123a5565b90506000611fcb856123a5565b9050611fdb8389898585896121e4565b60008681526065602090815260408083206001600160a01b038c1684529091529020548581101561201e5760405162461bcd60e51b81526004016107819061331b565b60008781526065602090815260408083206001600160a01b038d8116855292528083208985039055908a1682528120805488929061205d90849061304f565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46120bd848a8a8a8a8a6123f0565b505050505050505050565b6001600160a01b0383166120ee5760405162461bcd60e51b815260040161078190613393565b3360006120fa846123a5565b90506000612107846123a5565b9050612127838760008585604051806020016040528060008152506121e4565b60008581526065602090815260408083206001600160a01b038a1684529091529020548481101561216a5760405162461bcd60e51b8152600401610781906133d6565b60008681526065602090815260408083206001600160a01b038b81168086529184528285208a8703905582518b81529384018a90529092908816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4604080516020810190915260009052611749565b611b0e8686868686866124ab565b6001600160a01b0384163b15611b0e5760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906122369089908990889088908890600401613465565b6020604051808303816000875af1925050508015612271575060408051601f3d908101601f1916820190925261226e918101906134c3565b60015b61231e5761227d6134e0565b806308c379a014156122b757506122926134fc565b8061229d57506122b9565b8060405162461bcd60e51b815260040161078191906128de565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610781565b6001600160e01b0319811663bc197c8160e01b146117495760405162461bcd60e51b815260040161078190613585565b600054610100900460ff166107e85760405162461bcd60e51b81526004016107819061341a565b600054610100900460ff1661239c5760405162461bcd60e51b81526004016107819061341a565b610e5e33611cb7565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106123df576123df612fe3565b602090810291909101015292915050565b6001600160a01b0384163b15611b0e5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e619061243490899089908890889088906004016135cd565b6020604051808303816000875af192505050801561246f575060408051601f3d908101601f1916820190925261246c918101906134c3565b60015b61247b5761227d6134e0565b6001600160e01b0319811663f23a6e6160e01b146117495760405162461bcd60e51b815260040161078190613585565b6001600160a01b0385166125325760005b8351811015612530578281815181106124d7576124d7612fe3565b602002602001015160fb60008684815181106124f5576124f5612fe3565b60200260200101518152602001908152602001600020600082825461251a919061304f565b90915550612529905081613067565b90506124bc565b505b6001600160a01b038416611b0e5760005b835181101561174957600084828151811061256057612560612fe3565b60200260200101519050600084838151811061257e5761257e612fe3565b60200260200101519050600060fb6000848152602001908152602001600020549050818110156126015760405162461bcd60e51b815260206004820152602860248201527f455243313135353a206275726e20616d6f756e74206578636565647320746f74604482015267616c537570706c7960c01b6064820152608401610781565b600092835260fb60205260409092209103905561261d81613067565b9050612543565b82805461263090613082565b90600052602060002090601f0160209004810192826126525760008555612698565b82601f1061266b57805160ff1916838001178555612698565b82800160010185558215612698579182015b8281111561269857825182559160200191906001019061267d565b506126a49291506126a8565b5090565b5b808211156126a457600081556001016126a9565b80356001600160a01b03811681146126d457600080fd5b919050565b600080604083850312156126ec57600080fd5b6126f5836126bd565b946020939093013593505050565b6001600160e01b0319811681146107f157600080fd5b60006020828403121561272b57600080fd5b813561273681612703565b9392505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f191681016001600160401b03811182821017156127785761277861273d565b6040525050565b60006001600160401b038211156127985761279861273d565b50601f01601f191660200190565b600082601f8301126127b757600080fd5b81356127c28161277f565b6040516127cf8282612753565b8281528560208487010111156127e457600080fd5b82602086016020830137600092810160200192909252509392505050565b60006020828403121561281457600080fd5b81356001600160401b0381111561282a57600080fd5b612836848285016127a6565b949350505050565b8061020081018310156107af57600080fd5b6000610200828403121561286357600080fd5b612736838361283e565b60006020828403121561287f57600080fd5b5035919050565b60005b838110156128a1578181015183820152602001612889565b83811115611cb15750506000910152565b600081518084526128ca816020860160208601612886565b601f01601f19169290920160200192915050565b60208152600061273660208301846128b2565b6000806040838503121561290457600080fd5b50508035926020909101359150565b60006001600160401b0382111561292c5761292c61273d565b5060051b60200190565b600082601f83011261294757600080fd5b8135602061295482612913565b6040516129618282612753565b83815260059390931b850182019282810191508684111561298157600080fd5b8286015b8481101561299c5780358352918301918301612985565b509695505050505050565b600080600080600060a086880312156129bf57600080fd5b6129c8866126bd565b94506129d6602087016126bd565b935060408601356001600160401b03808211156129f257600080fd5b6129fe89838a01612936565b94506060880135915080821115612a1457600080fd5b612a2089838a01612936565b93506080880135915080821115612a3657600080fd5b50612a43888289016127a6565b9150509295509295909350565b60008060408385031215612a6357600080fd5b82356001600160401b0380821115612a7a57600080fd5b818501915085601f830112612a8e57600080fd5b81356020612a9b82612913565b604051612aa88282612753565b83815260059390931b8501820192828101915089841115612ac857600080fd5b948201945b83861015612aed57612ade866126bd565b82529482019490820190612acd565b96505086013592505080821115612b0357600080fd5b50612b1085828601612936565b9150509250929050565b600081518084526020808501945080840160005b83811015612b4a57815187529582019590820190600101612b2e565b509495945050505050565b6020815260006127366020830184612b1a565b600080600060608486031215612b7d57600080fd5b612b86846126bd565b925060208401356001600160401b0380821115612ba257600080fd5b612bae87838801612936565b93506040860135915080821115612bc457600080fd5b50612bd186828701612936565b9150509250925092565b803560ff811681146126d457600080fd5b600060c08284031215612bfe57600080fd5b60405160c081016001600160401b038282108183111715612c2157612c2161273d565b81604052829350612c31856126bd565b8352612c3f60208601612bdb565b6020840152612c5060408601612bdb565b6040840152612c6160608601612bdb565b6060840152612c7260808601612bdb565b608084015260a085013591508082168214612c8c57600080fd5b5060a0919091015292915050565b803561ffff811681146126d457600080fd5b60008060008060008060008060008060006102008c8e031215612cce57600080fd5b612cd88d8d612bec565b9a506001600160401b038060c08e01351115612cf357600080fd5b612d038e60c08f01358f016127a6565b9a50612d1160e08e01612c9a565b9950612d206101008e01612bdb565b9850612d2f6101208e01612bdb565b9750612d3e6101408e01612bdb565b9650806101608e01351115612d5257600080fd5b612d638e6101608f01358f016127a6565b9550612d726101808e016126bd565b9450612d816101a08e016126bd565b9350806101c08e01351115612d9557600080fd5b612da68e6101c08f01358f016127a6565b9250806101e08e01351115612dba57600080fd5b50612dcc8d6101e08e01358e016127a6565b90509295989b509295989b9093969950565b60008060408385031215612df157600080fd5b612dfa836126bd565b915060208301358015158114612e0f57600080fd5b809150509250929050565b600060208284031215612e2c57600080fd5b612736826126bd565b60018060a01b03815116825260ff602082015116602083015260ff604082015116604083015260ff606082015116606083015260ff60808201511660808301526001600160401b0360a08201511660a08301525050565b60e08101612e9a8285612e35565b6001600160a01b039290921660c09190910152919050565b60008060008060808587031215612ec857600080fd5b612ed1856126bd565b935060208501359250612ee660408601612bdb565b915060608501356001600160401b03811115612f0157600080fd5b612f0d878288016127a6565b91505092959194509250565b60008060408385031215612f2c57600080fd5b612f35836126bd565b9150612f43602084016126bd565b90509250929050565b600080600080600060a08688031215612f6457600080fd5b612f6d866126bd565b9450612f7b602087016126bd565b9350604086013592506060860135915060808601356001600160401b03811115612fa457600080fd5b612a43888289016127a6565b600080600060608486031215612fc557600080fd5b612fce846126bd565b95602085013595506040909401359392505050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561300b57600080fd5b61273682612c9a565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff0382111561304757613047613014565b019392505050565b6000821982111561306257613062613014565b500190565b600060001982141561307b5761307b613014565b5060010190565b600181811c9082168061309657607f821691505b602082108114156109c157634e487b7160e01b600052602260045260246000fd5b6000602082840312156130c957600080fd5b61273682612bdb565b60008160001904831182151516156130ec576130ec613014565b500290565b60008261310e57634e487b7160e01b600052601260045260246000fd5b500490565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b60c08152600061317460c08301896128b2565b61ffff8816602084015260ff8716604084015260ff8616606084015260ff8516608084015282810360a08401526131ab81856128b2565b9998505050505050505050565b60006101208083526131cc818401886128b2565b90506131db6020840187612e35565b82810360e08401526131ed81866128b2565b905082810361010084015261320281856128b2565b979650505050505050565b60006020828403121561321f57600080fd5b81516001600160401b0381111561323557600080fd5b8201601f8101841361324657600080fd5b80516132518161277f565b60405161325e8282612753565b82815286602084860101111561327357600080fd5b613284836020830160208701612886565b9695505050505050565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b6040815260006133786040830185612b1a565b828103602084015261338a8185612b1a565b95945050505050565b60208082526023908201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526024908201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604082015263616e636560e01b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6001600160a01b0386811682528516602082015260a06040820181905260009061349190830186612b1a565b82810360608401526134a38186612b1a565b905082810360808401526134b781856128b2565b98975050505050505050565b6000602082840312156134d557600080fd5b815161273681612703565b600060033d11156134f95760046000803e5060005160e01c5b90565b600060443d101561350a5790565b6040516003193d81016004833e81513d6001600160401b03816024840111818411171561353957505050505090565b82850191508151818111156135515750505050505090565b843d870101602082850101111561356b5750505050505090565b61357a60208286010187612753565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090613202908301846128b256fea26469706673582212206e4c68f3df41ff4cde1e39170185d2937142d6c35b2c774ca8fa507bfb97586964736f6c634300080c0033";

type PiecesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PiecesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Pieces__factory extends ContractFactory {
  constructor(...args: PiecesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Pieces> {
    return super.deploy(overrides || {}) as Promise<Pieces>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Pieces {
    return super.attach(address) as Pieces;
  }
  override connect(signer: Signer): Pieces__factory {
    return super.connect(signer) as Pieces__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PiecesInterface {
    return new utils.Interface(_abi) as PiecesInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Pieces {
    return new Contract(address, _abi, signerOrProvider) as Pieces;
  }
}
