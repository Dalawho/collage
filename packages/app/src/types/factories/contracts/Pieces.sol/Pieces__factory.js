"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
exports.__esModule = true;
exports.Pieces__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [],
        name: "notBurnAllowed",
        type: "error"
    },
    {
        inputs: [],
        name: "payRightAmount",
        type: "error"
    },
    {
        inputs: [],
        name: "toManyTokens",
        type: "error"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "account",
                type: "address"
            },
            {
                indexed: true,
                internalType: "address",
                name: "operator",
                type: "address"
            },
            {
                indexed: false,
                internalType: "bool",
                name: "approved",
                type: "bool"
            },
        ],
        name: "ApprovalForAll",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "id",
                type: "uint256"
            },
            {
                indexed: true,
                internalType: "address",
                name: "creator",
                type: "address"
            },
            {
                indexed: false,
                internalType: "string",
                name: "name",
                type: "string"
            },
            {
                indexed: false,
                internalType: "uint80",
                name: "price",
                type: "uint80"
            },
            {
                indexed: false,
                internalType: "uint16",
                name: "maxSupply",
                type: "uint16"
            },
        ],
        name: "ArtworkAdded",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint8",
                name: "version",
                type: "uint8"
            },
        ],
        name: "Initialized",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address"
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address"
            },
        ],
        name: "OwnershipTransferred",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "operator",
                type: "address"
            },
            {
                indexed: true,
                internalType: "address",
                name: "from",
                type: "address"
            },
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address"
            },
            {
                indexed: false,
                internalType: "uint256[]",
                name: "ids",
                type: "uint256[]"
            },
            {
                indexed: false,
                internalType: "uint256[]",
                name: "values",
                type: "uint256[]"
            },
        ],
        name: "TransferBatch",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "operator",
                type: "address"
            },
            {
                indexed: true,
                internalType: "address",
                name: "from",
                type: "address"
            },
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address"
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "id",
                type: "uint256"
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256"
            },
        ],
        name: "TransferSingle",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "string",
                name: "value",
                type: "string"
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "id",
                type: "uint256"
            },
        ],
        name: "URI",
        type: "event"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "id",
                type: "uint256"
            },
        ],
        name: "balanceOf",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address[]",
                name: "accounts",
                type: "address[]"
            },
            {
                internalType: "uint256[]",
                name: "ids",
                type: "uint256[]"
            },
        ],
        name: "balanceOfBatch",
        outputs: [
            {
                internalType: "uint256[]",
                name: "",
                type: "uint256[]"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "id",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256"
            },
        ],
        name: "burn",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address"
            },
            {
                internalType: "uint256[]",
                name: "ids",
                type: "uint256[]"
            },
            {
                internalType: "uint256[]",
                name: "values",
                type: "uint256[]"
            },
        ],
        name: "burnBatch",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [],
        name: "burnerAllowed",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint8",
                name: "maxSupply",
                type: "uint8"
            },
            {
                internalType: "uint80",
                name: "price",
                type: "uint80"
            },
            {
                internalType: "uint8",
                name: "mintAmount",
                type: "uint8"
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes"
            },
            {
                internalType: "uint16",
                name: "destLen",
                type: "uint16"
            },
            {
                internalType: "string",
                name: "name",
                type: "string"
            },
        ],
        name: "createToken",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "id",
                type: "uint256"
            },
        ],
        name: "exists",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [],
        name: "initialize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address"
            },
            {
                internalType: "address",
                name: "operator",
                type: "address"
            },
        ],
        name: "isApprovedForAll",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            },
        ],
        name: "layers",
        outputs: [
            {
                internalType: "address",
                name: "creator",
                type: "address"
            },
            {
                internalType: "uint8",
                name: "maxSupply",
                type: "uint8"
            },
            {
                internalType: "uint8",
                name: "supplyMinted",
                type: "uint8"
            },
            {
                internalType: "uint80",
                name: "price",
                type: "uint80"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "id",
                type: "uint256"
            },
            {
                internalType: "uint8",
                name: "amount",
                type: "uint8"
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes"
            },
        ],
        name: "mint",
        outputs: [],
        stateMutability: "payable",
        type: "function"
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [],
        name: "render",
        outputs: [
            {
                internalType: "contract IRender",
                name: "",
                type: "address"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "from",
                type: "address"
            },
            {
                internalType: "address",
                name: "to",
                type: "address"
            },
            {
                internalType: "uint256[]",
                name: "ids",
                type: "uint256[]"
            },
            {
                internalType: "uint256[]",
                name: "amounts",
                type: "uint256[]"
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes"
            },
        ],
        name: "safeBatchTransferFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "from",
                type: "address"
            },
            {
                internalType: "address",
                name: "to",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "id",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256"
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes"
            },
        ],
        name: "safeTransferFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "operator",
                type: "address"
            },
            {
                internalType: "bool",
                name: "approved",
                type: "bool"
            },
        ],
        name: "setApprovalForAll",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newBurner",
                type: "address"
            },
        ],
        name: "setBurner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_newRender",
                type: "address"
            },
        ],
        name: "setRender",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "newuri",
                type: "string"
            },
        ],
        name: "setURI",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "bytes4",
                name: "interfaceId",
                type: "bytes4"
            },
        ],
        name: "supportsInterface",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256"
            },
        ],
        name: "tokenURI",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "id",
                type: "uint256"
            },
        ],
        name: "totalSupply",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address"
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            },
        ],
        name: "uri",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
];
var _bytecode = "0x608060405234801561001057600080fd5b50612ab5806100206000396000f3fe6080604052600436106101655760003560e01c80639e9198c2116100d1578063d0a225371161008a578063f0c136cb11610064578063f0c136cb146104bd578063f242432a146104dd578063f2fde38b146104fd578063f5298aca1461051d57600080fd5b8063d0a2253714610440578063d607497a14610453578063e985e9c51461047457600080fd5b80639e9198c214610339578063a22cb46514610393578063a996d6ce146103b3578063b7954b71146103d3578063bd85b039146103f3578063c87b56dd1461042057600080fd5b80634f558e79116101235780634f558e79146102695780636b20c45414610298578063715018a6146102b85780637753358d146102cd5780638129fc1c146103065780638da5cb5b1461031b57600080fd5b8062fdd58e1461016a57806301ffc9a71461019d57806302fe5305146101cd5780630e89341c146101ef5780632eb2c2d61461021c5780634e1273f41461023c575b600080fd5b34801561017657600080fd5b5061018a610185366004611de3565b61053d565b6040519081526020015b60405180910390f35b3480156101a957600080fd5b506101bd6101b8366004611e23565b6105d5565b6040519015158152602001610194565b3480156101d957600080fd5b506101ed6101e8366004611f0c565b6105e6565b005b3480156101fb57600080fd5b5061020f61020a366004611f48565b6105fa565b6040516101949190611fb9565b34801561022857600080fd5b506101ed610237366004612060565b61068e565b34801561024857600080fd5b5061025c610257366004612109565b6106da565b604051610194919061220e565b34801561027557600080fd5b506101bd610284366004611f48565b600090815260fb6020526040902054151590565b3480156102a457600080fd5b506101ed6102b3366004612221565b610803565b3480156102c457600080fd5b506101ed61084b565b3480156102d957600080fd5b5061012e546102ee906001600160a01b031681565b6040516001600160a01b039091168152602001610194565b34801561031257600080fd5b506101ed61085f565b34801561032757600080fd5b506097546001600160a01b03166102ee565b34801561034557600080fd5b50610359610354366004611f48565b610a61565b604080516001600160a01b0395909516855260ff938416602086015291909216908301526001600160501b03166060820152608001610194565b34801561039f57600080fd5b506101ed6103ae366004612294565b610ab5565b3480156103bf57600080fd5b506101ed6103ce3660046122d0565b610ac4565b3480156103df57600080fd5b506101ed6103ee3660046122fc565b610aef565b3480156103ff57600080fd5b5061018a61040e366004611f48565b600090815260fb602052604090205490565b34801561042c57600080fd5b5061020f61043b366004611f48565b610ce9565b6101ed61044e3660046123b9565b610d5c565b34801561045f57600080fd5b5061012d546102ee906001600160a01b031681565b34801561048057600080fd5b506101bd61048f366004612420565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205460ff1690565b3480156104c957600080fd5b506101ed6104d83660046122d0565b610e9a565b3480156104e957600080fd5b506101ed6104f8366004612453565b610ec5565b34801561050957600080fd5b506101ed6105183660046122d0565b610f0a565b34801561052957600080fd5b506101ed6105383660046124b7565b610f80565b60006001600160a01b0383166105ad5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b5060009081526065602090815260408083206001600160a01b03949094168352929052205490565b60006105e082610fb6565b92915050565b6105ee611006565b6105f781611060565b50565b606060678054610609906124ea565b80601f0160208091040260200160405190810160405280929190818152602001828054610635906124ea565b80156106825780601f1061065757610100808354040283529160200191610682565b820191906000526020600020905b81548152906001019060200180831161066557829003601f168201915b50505050509050919050565b6001600160a01b0385163314806106aa57506106aa853361048f565b6106c65760405162461bcd60e51b81526004016105a490612525565b6106d38585858585611073565b5050505050565b6060815183511461073f5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016105a4565b600083516001600160401b0381111561075a5761075a611e47565b604051908082528060200260200182016040528015610783578160200160208202803683370190505b50905060005b84518110156107fb576107ce8582815181106107a7576107a7612573565b60200260200101518583815181106107c1576107c1612573565b602002602001015161053d565b8282815181106107e0576107e0612573565b60209081029190910101526107f48161259f565b9050610789565b509392505050565b6001600160a01b03831633148061081f575061081f833361048f565b61083b5760405162461bcd60e51b81526004016105a490612525565b610846838383611220565b505050565b610853611006565b61085d60006113c1565b565b600054610100900460ff161580801561087f5750600054600160ff909116105b806108995750303b158015610899575060005460ff166001145b6108fc5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105a4565b6000805460ff19166001179055801561091f576000805461ff0019166101001790555b6109466040518060400160405280600681526020016550696563657360d01b815250611413565b61094e611443565b61095661146a565b61095e611443565b604080516080810182523381526000602082018181529282018181526060830182815261012f8054600181018255935292517f232da9e50dad2971456a78fb5cd6ff6b75019984d6e918139ce990999420f97990920180549451915193516001600160501b0316600160b01b026001600160b01b0360ff958616600160a81b02166001600160a81b0393909516600160a01b026001600160a81b03199096166001600160a01b03949094169390931794909417169190911717905580156105f7576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b61012f8181548110610a7257600080fd5b6000918252602090912001546001600160a01b038116915060ff600160a01b8204811691600160a81b8104909116906001600160501b03600160b01b9091041684565b610ac0338383611499565b5050565b610acc611006565b61012e80546001600160a01b0319166001600160a01b0392909216919091179055565b61012f80546040805160808101825233815260ff808b166020830190815260008385018181526001600160501b03808e1660608701908152600189018a559890925293517f232da9e50dad2971456a78fb5cd6ff6b75019984d6e918139ce990999420f97987018054935195519851909216600160b01b026001600160b01b03988516600160a81b02989098166001600160a81b0395909416600160a01b026001600160a81b03199093166001600160a01b039182161792909217939093169190911794909417905561012d54905163063ee34f60e21b8152919216906318fb8d3c90610be4908790879087906004016125ba565b600060405180830381600087803b158015610bfe57600080fd5b505af1158015610c12573d6000803e3d6000fd5b50505050336001600160a01b0316817f8ceea1d8743cdb76016f428735788c97832d3463bb22b0d9e4d8da572469a64084898b604051610c54939291906125f3565b60405180910390a360ff851615610ce057610c8d33828760ff16604051806040016040528060018152602001600360fc1b81525061157a565b8461012f8281548110610ca257610ca2612573565b60009182526020909120018054601590610cc7908490600160a81b900460ff16612628565b92506101000a81548160ff021916908360ff1602179055505b50505050505050565b61012d5460405163c87b56dd60e01b8152600481018390526060916001600160a01b03169063c87b56dd90602401600060405180830381865afa158015610d34573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105e0919081019061264d565b600061012f8481548110610d7257610d72612573565b60009182526020918290206040805160808101825292909101546001600160a01b0381168352600160a01b810460ff90811694840194909452600160a81b8104841691830191909152600160b01b90046001600160501b031660608201819052909250610de09185166126c4565b3414610dff576040516333a868c560e11b815260040160405180910390fd5b806020015160ff16816040015184610e179190612628565b60ff161115610e39576040516341a5303b60e11b815260040160405180910390fd5b8261012f8581548110610e4e57610e4e612573565b60009182526020909120018054601590610e73908490600160a81b900460ff16612628565b92506101000a81548160ff021916908360ff1602179055506106d385858560ff168561157a565b610ea2611006565b61012d80546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038516331480610ee15750610ee1853361048f565b610efd5760405162461bcd60e51b81526004016105a490612525565b6106d38585858585611696565b610f12611006565b6001600160a01b038116610f775760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105a4565b6105f7816113c1565b61012e546001600160a01b03163314610fab5760405162124a8f60e51b815260040160405180910390fd5b6108468383836117d2565b60006001600160e01b03198216636cdb3d1360e11b1480610fe757506001600160e01b031982166303a24d0760e21b145b806105e057506301ffc9a760e01b6001600160e01b03198316146105e0565b6097546001600160a01b0316331461085d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105a4565b8051610ac0906067906020840190611d2e565b81518351146110945760405162461bcd60e51b81526004016105a4906126e3565b6001600160a01b0384166110ba5760405162461bcd60e51b81526004016105a49061272b565b336110c98187878787876118ee565b60005b84518110156111b25760008582815181106110e9576110e9612573565b60200260200101519050600085838151811061110757611107612573565b60209081029190910181015160008481526065835260408082206001600160a01b038e1683529093529190912054909150818110156111585760405162461bcd60e51b81526004016105a490612770565b60008381526065602090815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906111979084906127ba565b92505081905550505050806111ab9061259f565b90506110cc565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516112029291906127d2565b60405180910390a46112188187878787876118fc565b505050505050565b6001600160a01b0383166112465760405162461bcd60e51b81526004016105a490612800565b80518251146112675760405162461bcd60e51b81526004016105a4906126e3565b600033905061128a818560008686604051806020016040528060008152506118ee565b60005b83518110156113525760008482815181106112aa576112aa612573565b6020026020010151905060008483815181106112c8576112c8612573565b60209081029190910181015160008481526065835260408082206001600160a01b038c1683529093529190912054909150818110156113195760405162461bcd60e51b81526004016105a490612843565b60009283526065602090815260408085206001600160a01b038b168652909152909220910390558061134a8161259f565b91505061128d565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516113a39291906127d2565b60405180910390a46040805160208101909152600090525b50505050565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1661143a5760405162461bcd60e51b81526004016105a490612887565b6105f781611a58565b600054610100900460ff1661085d5760405162461bcd60e51b81526004016105a490612887565b600054610100900460ff166114915760405162461bcd60e51b81526004016105a490612887565b61085d611a7f565b816001600160a01b0316836001600160a01b0316141561150d5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016105a4565b6001600160a01b03838116600081815260666020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166115da5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016105a4565b3360006115e685611aaf565b905060006115f385611aaf565b9050611604836000898585896118ee565b60008681526065602090815260408083206001600160a01b038b168452909152812080548792906116369084906127ba565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610ce083600089898989611afa565b6001600160a01b0384166116bc5760405162461bcd60e51b81526004016105a49061272b565b3360006116c885611aaf565b905060006116d585611aaf565b90506116e58389898585896118ee565b60008681526065602090815260408083206001600160a01b038c168452909152902054858110156117285760405162461bcd60e51b81526004016105a490612770565b60008781526065602090815260408083206001600160a01b038d8116855292528083208985039055908a168252812080548892906117679084906127ba565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46117c7848a8a8a8a8a611afa565b505050505050505050565b6001600160a01b0383166117f85760405162461bcd60e51b81526004016105a490612800565b33600061180484611aaf565b9050600061181184611aaf565b9050611831838760008585604051806020016040528060008152506118ee565b60008581526065602090815260408083206001600160a01b038a168452909152902054848110156118745760405162461bcd60e51b81526004016105a490612843565b60008681526065602090815260408083206001600160a01b038b81168086529184528285208a8703905582518b81529384018a90529092908816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4604080516020810190915260009052610ce0565b611218868686868686611bb5565b6001600160a01b0384163b156112185760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061194090899089908890889088906004016128d2565b6020604051808303816000875af192505050801561197b575060408051601f3d908101601f1916820190925261197891810190612930565b60015b611a285761198761294d565b806308c379a014156119c1575061199c612969565b806119a757506119c3565b8060405162461bcd60e51b81526004016105a49190611fb9565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016105a4565b6001600160e01b0319811663bc197c8160e01b14610ce05760405162461bcd60e51b81526004016105a4906129f2565b600054610100900460ff166105ee5760405162461bcd60e51b81526004016105a490612887565b600054610100900460ff16611aa65760405162461bcd60e51b81526004016105a490612887565b61085d336113c1565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611ae957611ae9612573565b602090810291909101015292915050565b6001600160a01b0384163b156112185760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190611b3e9089908990889088908890600401612a3a565b6020604051808303816000875af1925050508015611b79575060408051601f3d908101601f19168201909252611b7691810190612930565b60015b611b855761198761294d565b6001600160e01b0319811663f23a6e6160e01b14610ce05760405162461bcd60e51b81526004016105a4906129f2565b6001600160a01b038516611c3c5760005b8351811015611c3a57828181518110611be157611be1612573565b602002602001015160fb6000868481518110611bff57611bff612573565b602002602001015181526020019081526020016000206000828254611c2491906127ba565b90915550611c3390508161259f565b9050611bc6565b505b6001600160a01b0384166112185760005b8351811015610ce0576000848281518110611c6a57611c6a612573565b602002602001015190506000848381518110611c8857611c88612573565b60200260200101519050600060fb600084815260200190815260200160002054905081811015611d0b5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a206275726e20616d6f756e74206578636565647320746f74604482015267616c537570706c7960c01b60648201526084016105a4565b600092835260fb602052604090922091039055611d278161259f565b9050611c4d565b828054611d3a906124ea565b90600052602060002090601f016020900481019282611d5c5760008555611da2565b82601f10611d7557805160ff1916838001178555611da2565b82800160010185558215611da2579182015b82811115611da2578251825591602001919060010190611d87565b50611dae929150611db2565b5090565b5b80821115611dae5760008155600101611db3565b80356001600160a01b0381168114611dde57600080fd5b919050565b60008060408385031215611df657600080fd5b611dff83611dc7565b946020939093013593505050565b6001600160e01b0319811681146105f757600080fd5b600060208284031215611e3557600080fd5b8135611e4081611e0d565b9392505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f191681016001600160401b0381118282101715611e8257611e82611e47565b6040525050565b60006001600160401b03821115611ea257611ea2611e47565b50601f01601f191660200190565b600082601f830112611ec157600080fd5b8135611ecc81611e89565b604051611ed98282611e5d565b828152856020848701011115611eee57600080fd5b82602086016020830137600092810160200192909252509392505050565b600060208284031215611f1e57600080fd5b81356001600160401b03811115611f3457600080fd5b611f4084828501611eb0565b949350505050565b600060208284031215611f5a57600080fd5b5035919050565b60005b83811015611f7c578181015183820152602001611f64565b838111156113bb5750506000910152565b60008151808452611fa5816020860160208601611f61565b601f01601f19169290920160200192915050565b602081526000611e406020830184611f8d565b60006001600160401b03821115611fe557611fe5611e47565b5060051b60200190565b600082601f83011261200057600080fd5b8135602061200d82611fcc565b60405161201a8282611e5d565b83815260059390931b850182019282810191508684111561203a57600080fd5b8286015b84811015612055578035835291830191830161203e565b509695505050505050565b600080600080600060a0868803121561207857600080fd5b61208186611dc7565b945061208f60208701611dc7565b935060408601356001600160401b03808211156120ab57600080fd5b6120b789838a01611fef565b945060608801359150808211156120cd57600080fd5b6120d989838a01611fef565b935060808801359150808211156120ef57600080fd5b506120fc88828901611eb0565b9150509295509295909350565b6000806040838503121561211c57600080fd5b82356001600160401b038082111561213357600080fd5b818501915085601f83011261214757600080fd5b8135602061215482611fcc565b6040516121618282611e5d565b83815260059390931b850182019282810191508984111561218157600080fd5b948201945b838610156121a65761219786611dc7565b82529482019490820190612186565b965050860135925050808211156121bc57600080fd5b506121c985828601611fef565b9150509250929050565b600081518084526020808501945080840160005b83811015612203578151875295820195908201906001016121e7565b509495945050505050565b602081526000611e4060208301846121d3565b60008060006060848603121561223657600080fd5b61223f84611dc7565b925060208401356001600160401b038082111561225b57600080fd5b61226787838801611fef565b9350604086013591508082111561227d57600080fd5b5061228a86828701611fef565b9150509250925092565b600080604083850312156122a757600080fd5b6122b083611dc7565b9150602083013580151581146122c557600080fd5b809150509250929050565b6000602082840312156122e257600080fd5b611e4082611dc7565b803560ff81168114611dde57600080fd5b60008060008060008060c0878903121561231557600080fd5b61231e876122eb565b955060208701356001600160501b038116811461233a57600080fd5b9450612348604088016122eb565b935060608701356001600160401b038082111561236457600080fd5b6123708a838b01611eb0565b94506080890135915061ffff8216821461238957600080fd5b90925060a0880135908082111561239f57600080fd5b506123ac89828a01611eb0565b9150509295509295509295565b600080600080608085870312156123cf57600080fd5b6123d885611dc7565b9350602085013592506123ed604086016122eb565b915060608501356001600160401b0381111561240857600080fd5b61241487828801611eb0565b91505092959194509250565b6000806040838503121561243357600080fd5b61243c83611dc7565b915061244a60208401611dc7565b90509250929050565b600080600080600060a0868803121561246b57600080fd5b61247486611dc7565b945061248260208701611dc7565b9350604086013592506060860135915060808601356001600160401b038111156124ab57600080fd5b6120fc88828901611eb0565b6000806000606084860312156124cc57600080fd5b6124d584611dc7565b95602085013595506040909401359392505050565b600181811c908216806124fe57607f821691505b6020821081141561251f57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156125b3576125b3612589565b5060010190565b6060815260006125cd6060830186611f8d565b61ffff8516602084015282810360408401526125e98185611f8d565b9695505050505050565b6060815260006126066060830186611f8d565b90506001600160501b038416602083015260ff83166040830152949350505050565b600060ff821660ff84168060ff0382111561264557612645612589565b019392505050565b60006020828403121561265f57600080fd5b81516001600160401b0381111561267557600080fd5b8201601f8101841361268657600080fd5b805161269181611e89565b60405161269e8282611e5d565b8281528660208486010111156126b357600080fd5b6125e9836020830160208701611f61565b60008160001904831182151516156126de576126de612589565b500290565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b600082198211156127cd576127cd612589565b500190565b6040815260006127e560408301856121d3565b82810360208401526127f781856121d3565b95945050505050565b60208082526023908201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526024908201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604082015263616e636560e01b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6001600160a01b0386811682528516602082015260a0604082018190526000906128fe908301866121d3565b828103606084015261291081866121d3565b905082810360808401526129248185611f8d565b98975050505050505050565b60006020828403121561294257600080fd5b8151611e4081611e0d565b600060033d11156129665760046000803e5060005160e01c5b90565b600060443d10156129775790565b6040516003193d81016004833e81513d6001600160401b0381602484011181841117156129a657505050505090565b82850191508151818111156129be5750505050505090565b843d87010160208285010111156129d85750505050505090565b6129e760208286010187611e5d565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090612a7490830184611f8d565b97965050505050505056fea2646970667358221220c918e38d0adc182658f1ace5818507bfab1ac9a98336663d4a76134cf3e3876764736f6c634300080c0033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var Pieces__factory = /** @class */ (function (_super) {
    __extends(Pieces__factory, _super);
    function Pieces__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    Pieces__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    Pieces__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    Pieces__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    Pieces__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    Pieces__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    Pieces__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    Pieces__factory.bytecode = _bytecode;
    Pieces__factory.abi = _abi;
    return Pieces__factory;
}(ethers_1.ContractFactory));
exports.Pieces__factory = Pieces__factory;
