/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Collage,
  CollageInterface,
} from "../../../contracts/Collage.sol/Collage";

const _abi = [
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "maxFreeClaimed",
    type: "error",
  },
  {
    inputs: [],
    name: "maxMintsPerWallet",
    type: "error",
  },
  {
    inputs: [],
    name: "mintNotStarted",
    type: "error",
  },
  {
    inputs: [],
    name: "notAValidSender",
    type: "error",
  },
  {
    inputs: [],
    name: "notTokenOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "onlyMinter",
    type: "error",
  },
  {
    inputs: [],
    name: "payRightAmount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "COLLAGE_PRICE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_LAYERS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_balanceData",
    outputs: [
      {
        internalType: "uint32",
        name: "balance",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "mintedAmount",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "allowListMinted",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "_getTokenDataOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct ERC721G.OwnerStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_tokenData",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "_trueOwnerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "layer",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "scale",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "xOffset",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "yOffset",
        type: "uint8",
      },
      {
        internalType: "uint16",
        name: "layerId",
        type: "uint16",
      },
    ],
    name: "addLayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "address_",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxBatchSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16[16]",
        name: "layerIds",
        type: "uint16[16]",
      },
      {
        internalType: "uint8[16]",
        name: "scales",
        type: "uint8[16]",
      },
      {
        internalType: "uint8[16]",
        name: "xOffsets",
        type: "uint8[16]",
      },
      {
        internalType: "uint8[16]",
        name: "yOffsets",
        type: "uint8[16]",
      },
    ],
    name: "mintAndBuy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16[16]",
        name: "layerIds",
        type: "uint16[16]",
      },
      {
        internalType: "uint8[16]",
        name: "scales",
        type: "uint8[16]",
      },
      {
        internalType: "uint8[16]",
        name: "xOffsets",
        type: "uint8[16]",
      },
      {
        internalType: "uint8[16]",
        name: "yOffsets",
        type: "uint8[16]",
      },
    ],
    name: "mintAndSet",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "mintIndex",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pieces",
    outputs: [
      {
        internalType: "contract IPieces",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16[16]",
        name: "pieceIds",
        type: "uint16[16]",
      },
      {
        internalType: "uint8[16]",
        name: "scale",
        type: "uint8[16]",
      },
      {
        internalType: "uint8[16]",
        name: "xOffsets",
        type: "uint8[16]",
      },
      {
        internalType: "uint8[16]",
        name: "yOffsets",
        type: "uint8[16]",
      },
    ],
    name: "previewCollage",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "layerNr",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "scale",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "xOffset",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "yOffset",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "pieceId",
        type: "uint8",
      },
    ],
    name: "previewTokenCollage",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "render",
    outputs: [
      {
        internalType: "contract IRender",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "royaltyReciever",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from_",
        type: "address",
      },
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from_",
        type: "address",
      },
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data_",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator_",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved_",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newCollagePrice",
        type: "uint256",
      },
    ],
    name: "setCollagePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newPieces",
        type: "address",
      },
    ],
    name: "setPieces",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newRender",
        type: "address",
      },
    ],
    name: "setRender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "iid_",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenInfo",
    outputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "address_",
        type: "address",
      },
    ],
    name: "totalBalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "address_",
        type: "address",
      },
    ],
    name: "totalMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from_",
        type: "address",
      },
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "address_",
        type: "address",
      },
    ],
    name: "walletOfOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612c42806100206000396000f3fe6080604052600436106102715760003560e01c8063715018a61161014f578063c90e348d116100c1578063e6798baa1161007a578063e6798baa14610838578063e985e9c51461084e578063eaea130f14610889578063ef79937a146108a9578063f0c136cb146108bc578063f2fde38b146108dc57600080fd5b8063c90e348d14610783578063cc33c875146107a3578063ce951229146107d9578063d55f9273146107ec578063d5abeb0114610802578063d607497a1461081857600080fd5b8063b0b50ed511610113578063b0b50ed51461068a578063b88d4fde146106c0578063ba745f2e146106e0578063c3db7e4c14610718578063c829b0e31461074e578063c87b56dd1461076357600080fd5b8063715018a61461060d5780638129fc1c146106225780638da5cb5b1461063757806395d89b4114610655578063a22cb4651461066a57600080fd5b806340bf637d116101e857806352257172116101ac57806352257172146104db5780635266069d146104fb5780635b4337b1146105715780635e7676e1146105915780636352211e146105b157806370a08231146105d157600080fd5b806340bf637d1461043857806342842e0e1461044e578063438b63001461046e5780634703849c1461049b5780634b0ee02a146104bb57600080fd5b80631249c58b1161023a5780631249c58b1461038f578063176740361461039757806318160ddd146103b757806323b872dd146103cc5780632913daa0146103ec5780632c2cdd601461040257600080fd5b80623d47901461027657806301ffc9a7146102cd57806306fdde03146102fd578063081812fc1461031f578063095ea7b31461036d575b600080fd5b34801561028257600080fd5b506102ba6102913660046122da565b6001600160a01b0316600090815260076020526040902054640100000000900463ffffffff1690565b6040519081526020015b60405180910390f35b3480156102d957600080fd5b506102ed6102e8366004612312565b6108fc565b60405190151581526020016102c4565b34801561030957600080fd5b5061031261099f565b6040516102c49190612387565b34801561032b57600080fd5b5061035561033a36600461239a565b600b602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016102c4565b34801561037957600080fd5b5061038d6103883660046123b3565b610a2d565b005b61038d610ad4565b3480156103a357600080fd5b50607254610355906001600160a01b031681565b3480156103c357600080fd5b506102ba610b38565b3480156103d857600080fd5b5061038d6103e73660046123dd565b610b4f565b3480156103f857600080fd5b506102ba60055481565b34801561040e57600080fd5b5061035561041d36600461239a565b6006602052600090815260409020546001600160a01b031681565b34801561044457600080fd5b506102ba60735481565b34801561045a57600080fd5b5061038d6104693660046123dd565b610bbb565b34801561047a57600080fd5b5061048e6104893660046122da565b610bd6565b6040516102c49190612419565b3480156104a757600080fd5b506103126104b6366004612549565b610cb7565b3480156104c757600080fd5b506102ba6104d63660046122da565b610e36565b3480156104e757600080fd5b5061038d6104f63660046125e7565b610e5a565b34801561050757600080fd5b5061054a6105163660046122da565b60076020526000908152604090205463ffffffff808216916401000000008104821691680100000000000000009091041683565b6040805163ffffffff948516815292841660208401529216918101919091526060016102c4565b34801561057d57600080fd5b5061031261058c366004612654565b610ff7565b34801561059d57600080fd5b506103556105ac36600461239a565b61114a565b3480156105bd57600080fd5b506103556105cc36600461239a565b61115c565b3480156105dd57600080fd5b506102ba6105ec3660046122da565b6001600160a01b031660009081526007602052604090205463ffffffff1690565b34801561061957600080fd5b5061038d611170565b34801561062e57600080fd5b5061038d611182565b34801561064357600080fd5b50603f546001600160a01b0316610355565b34801561066157600080fd5b506103126112e6565b34801561067657600080fd5b5061038d6106853660046126b5565b6112f3565b34801561069657600080fd5b506103556106a536600461239a565b6008602052600090815260409020546001600160a01b031681565b3480156106cc57600080fd5b5061038d6106db366004612719565b611302565b3480156106ec57600080fd5b506107006106fb36600461239a565b611461565b60405190516001600160a01b031681526020016102c4565b34801561072457600080fd5b5061035561073336600461239a565b6009602052600090815260409020546001600160a01b031681565b34801561075a57600080fd5b506102ba601081565b34801561076f57600080fd5b5061031261077e36600461239a565b611572565b34801561078f57600080fd5b5061038d61079e36600461239a565b611606565b3480156107af57600080fd5b506103556107be36600461239a565b600a602052600090815260409020546001600160a01b031681565b61038d6107e73660046127d6565b611613565b3480156107f857600080fd5b506102ba60035481565b34801561080e57600080fd5b506102ba6103e881565b34801561082457600080fd5b50607154610355906001600160a01b031681565b34801561084457600080fd5b506102ba60045481565b34801561085a57600080fd5b506102ed610869366004612827565b600c60209081526000928352604080842090915290825290205460ff1681565b34801561089557600080fd5b5061038d6108a43660046122da565b611773565b61038d6108b73660046127d6565b61179d565b3480156108c857600080fd5b5061038d6108d73660046122da565b61188b565b3480156108e857600080fd5b5061038d6108f73660046122da565b6118b5565b60006301ffc9a760e01b6001600160e01b03198316148061092d57506380ac58cd60e01b6001600160e01b03198316145b806109485750635b5e139f60e01b6001600160e01b03198316145b8061096357506307f5828d60e41b6001600160e01b03198316145b8061097e5750632483248360e11b6001600160e01b03198316145b80610999575063152a902d60e11b6001600160e01b03198316145b92915050565b600180546109ac9061285a565b80601f01602080910402602001604051908101604052809291908181526020018280546109d89061285a565b8015610a255780601f106109fa57610100808354040283529160200191610a25565b820191906000526020600020905b815481529060010190602001808311610a0857829003601f168201915b505050505081565b6000610a388261115c565b90506001600160a01b038116331480610a7457506001600160a01b0381166000908152600c6020908152604080832033845290915290205460ff165b610ac55760405162461bcd60e51b815260206004820152601f60248201527f455243373231473a20617070726f7665206e6f7420617574686f72697a65640060448201526064015b60405180910390fd5b610acf838361192b565b505050565b6103e8610adf610b38565b610aea9060016128ab565b1115610b095760405163d05cb60960e01b815260040160405180910390fd5b6073543414610b2b576040516333a868c560e11b815260040160405180910390fd5b610b36336001611999565b565b6000600454600354610b4a91906128c3565b905090565b610b5933826119cf565b610bb05760405162461bcd60e51b815260206004820152602260248201527f455243373231473a207472616e7366657246726f6d20756e617574686f72697a604482015261195960f21b6064820152608401610abc565b610acf838383611a4d565b610acf83838360405180602001604052806000815250611302565b60606000610bff836001600160a01b031660009081526007602052604090205463ffffffff1690565b905060008167ffffffffffffffff811115610c1c57610c1c61245d565b604051908082528060200260200182016040528015610c45578160200160208202803683370190505b506004549091506000905b83821015610cad57856001600160a01b0316610c6b8261115c565b6001600160a01b03161415610ca557808383610c86816128da565b945081518110610c9857610c986128f5565b6020026020010181815250505b600101610c50565b5090949350505050565b6060610cc16121e3565b60005b60108160ff161015610db4576000878260ff1660108110610ce757610ce76128f5565b602002015161ffff161115610da2576040518060800160405280878360ff1660108110610d1657610d166128f5565b602002015160ff168152602001868360ff1660108110610d3857610d386128f5565b602002015160ff168152602001858360ff1660108110610d5a57610d5a6128f5565b602002015160ff168152602001888360ff1660108110610d7c57610d7c6128f5565b602002015161ffff1690528260ff831660108110610d9c57610d9c6128f5565b60200201525b80610dac8161290b565b915050610cc4565b5060715460405163387196fd60e01b81526001600160a01b039091169063387196fd90610de590849060040161292b565b600060405180830381865afa158015610e02573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e2a9190810190612991565b9150505b949350505050565b6001600160a01b03811660009081526007602052604081205463ffffffff16610999565b6000868152600660205260409020546001600160a01b03163314610e91576040516348f2abcb60e11b815260040160405180910390fd5b607254604051637a94c56560e11b815233600482015261ffff83166024820152600160448201526001600160a01b039091169063f5298aca90606401600060405180830381600087803b158015610ee757600080fd5b505af1158015610efb573d6000803e3d6000fd5b5050505060405180608001604052808560ff1681526020018460ff1681526020018360ff1681526020018261ffff16815250600a60008881526020019081526020016000206001018660ff1660108110610f5757610f576128f5565b825191018054602084015160408086015160609096015161ffff1663010000000264ffff0000001960ff97881662010000021664ffffff0000199388166101000261ffff19909516979096169690961792909217169290921792909217909155517ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce790610fe79088815260200190565b60405180910390a1505050505050565b6000868152600a6020526040808220815161020081019092526060929190600101601083835b8282101561107857604080516080810182528584015460ff808216835261010082048116602080850191909152620100008304909116938301939093526301000000900461ffff16606082015282526001909201910161101d565b50505050905060405180608001604052808760ff1681526020018660ff1681526020018560ff1681526020018460ff1661ffff16815250818860ff16601081106110c4576110c46128f5565b602002015260715460405163387196fd60e01b81526001600160a01b039091169063387196fd906110f990849060040161292b565b600060405180830381865afa158015611116573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261113e9190810190612991565b98975050505050505050565b600061115582611461565b5192915050565b60008061116883611461565b519392505050565b611178611bbf565b610b366000611c19565b600054610100900460ff16158080156111a25750600054600160ff909116105b806111bc5750303b1580156111bc575060005460ff166001145b61121f5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610abc565b6000805460ff191660011790558015611242576000805461ff0019166101001790555b61128a60405180604001604052806007815260200166436f6c6c61676560c81b81525060405180604001604052806003815260200162434c4760e81b8152506001601e611c6b565b611292611ccc565b666a94d74f43000060735580156112e3576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b600280546109ac9061285a565b6112fe338383611cfb565b5050565b61130d848484610b4f565b6001600160a01b0383163b1561145b576000836001600160a01b031663150b7a02338786866040516024016113459493929190612a08565b6040516020818303038152906040529060e01b6020820180516001600160e01b03838183161783525050505060405161137e9190612a45565b6000604051808303816000865af19150503d80600081146113bb576040519150601f19603f3d011682016040523d82523d6000602084013e6113c0565b606091505b509150506000818060200190518101906113da9190612a61565b9050630a85bd0160e11b6001600160e01b03198216146114585760405162461bcd60e51b815260206004820152603360248201527f455243373231473a20736166655472616e7366657246726f6d20746f5f206e6f6044820152726e2d45524337323152656365697661626c652160681b6064820152608401610abc565b50505b50505050565b6040805160208101909152600081526004548210156114c25760405162461bcd60e51b815260206004820152601a60248201527f546f6b656e49642062656c6f77207374617274696e67204964210000000000006044820152606401610abc565b6000828152600660205260409020546001600160a01b03161515806114e957506003548210155b156115195750600090815260066020908152604091829020825191820190925290546001600160a01b0316815290565b815b6000818152600860205260409020546001600160a01b0316611540576000190161151b565b600090815260086020908152604091829020825191820190925290546001600160a01b0316815292915050565b919050565b6071546000828152600a60205260409081902080549151637ee33b5760e11b81526060936001600160a01b039081169363fdc676ae936115c19388936001929092019290911690600401612a7e565b600060405180830381865afa1580156115de573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109999190810190612991565b61160e611bbf565b607355565b6103e861161e610b38565b6116299060016128ab565b11156116485760405163d05cb60960e01b815260040160405180910390fd5b607354341461166a576040516333a868c560e11b815260040160405180910390fd5b60005b60108160ff161015611763576000858260ff1660108110611690576116906128f5565b6020020160208101906116a39190612af5565b61ffff161115611751576072546001600160a01b031663f5298aca338760ff8516601081106116d4576116d46128f5565b6020020160208101906116e79190612af5565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015261ffff16602482015260016044820152606401600060405180830381600087803b15801561173857600080fd5b505af115801561174c573d6000803e3d6000fd5b505050505b8061175b8161290b565b91505061166d565b5061145b33600186868686611d68565b61177b611bbf565b607280546001600160a01b0319166001600160a01b0392909216919091179055565b6103e86117a8610b38565b6117b39060016128ab565b11156117d25760405163d05cb60960e01b815260040160405180910390fd5b607254604051630448d60360e01b81526000916001600160a01b031690630448d60390611803908890600401612b10565b6020604051808303816000875af1158015611822573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118469190612b45565b90506073548161185691906128ab565b3414611875576040516333a868c560e11b815260040160405180910390fd5b61188433600187878787611d68565b5050505050565b611893611bbf565b607180546001600160a01b0319166001600160a01b0392909216919091179055565b6118bd611bbf565b6001600160a01b0381166119225760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610abc565b6112e381611c19565b6000818152600b6020526040902080546001600160a01b0319166001600160a01b03841690811790915581906119608261115c565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b805b6005548111156119c5576005546119b290826128c3565b90506119c083600554612069565b61199b565b610acf8382612069565b6000806119db8361115c565b9050836001600160a01b0316816001600160a01b03161480611a1657506000838152600b60205260409020546001600160a01b038581169116145b80610e2e57506001600160a01b038082166000908152600c602090815260408083209388168352929052205460ff16949350505050565b611a568161115c565b6001600160a01b0316836001600160a01b031614611ab65760405162461bcd60e51b815260206004820152601d60248201527f455243373231473a205f7472616e7366657220213d206f776e65724f660000006044820152606401610abc565b6001600160a01b038216611b0c5760405162461bcd60e51b815260206004820152601960248201527f455243373231473a205f7472616e7366657220746f20307830000000000000006044820152606401610abc565b6000818152600b6020908152604080832080546001600160a01b03199081169091556006835281842080549091166001600160a01b038781169182179092559087168085526007909352818420805463ffffffff1980821663ffffffff928316600019018316179092558286528386208054928316928216600101909116919091179055905184939192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b603f546001600160a01b03163314610b365760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610abc565b603f80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16611c925760405162461bcd60e51b8152600401610abc90612b5e565b8351611ca590600190602087019061222a565b508251611cb990600290602086019061222a565b5060038290556004919091556005555050565b600054610100900460ff16611cf35760405162461bcd60e51b8152600401610abc90612b5e565b610b366121b3565b6001600160a01b038381166000818152600c6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038616611dbe5760405162461bcd60e51b815260206004820152601d60248201527f455243373231473a205f6d696e74496e7465726e616c20746f203078300000006044820152606401610abc565b600554851115611de05760405162461bcd60e51b8152600401610abc90612ba9565b6003546000611def87836128ab565b905060005b60108160ff161015611f93576000878260ff1660108110611e1757611e176128f5565b602002016020810190611e2a9190612af5565b61ffff161115611f81576040518060800160405280878360ff1660108110611e5457611e546128f5565b602002016020810190611e679190612bf1565b60ff168152602001868360ff1660108110611e8457611e846128f5565b602002016020810190611e979190612bf1565b60ff168152602001858360ff1660108110611eb457611eb46128f5565b602002016020810190611ec79190612bf1565b60ff168152602001888360ff1660108110611ee457611ee46128f5565b602002016020810190611ef79190612af5565b61ffff1690526000848152600a6020526040902060010160ff831660108110611f2257611f226128f5565b8251910180546020840151604085015160609095015161ffff1663010000000264ffff0000001960ff96871662010000021664ffffff0000199287166101000261ffff1990941696909516959095179190911716919091179190911790555b80611f8b8161290b565b915050611df4565b50600082815260066020908152604080832080546001600160a01b038d166001600160a01b03199182168117909255600a8452828520805490911682179055835260079091529020805464010000000063ffffffff8083168b01811663ffffffff198416811783900482168c0190911690910267ffffffffffffffff19909216171790555b60405182906001600160a01b038a16906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a48082600101925082106120185760035550505050505050565b6001600160a01b0382166120bf5760405162461bcd60e51b815260206004820152601d60248201527f455243373231473a205f6d696e74496e7465726e616c20746f203078300000006044820152606401610abc565b6005548111156120e15760405162461bcd60e51b8152600401610abc90612ba9565b60035460006120f083836128ab565b600083815260066020908152604080832080546001600160a01b038a166001600160a01b03199091168117909155835260079091529020805464010000000063ffffffff8083168801811663ffffffff19841681178390048216890190911690910267ffffffffffffffff199092161717905590505b60405182906001600160a01b038616906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a480826001019250821061216657600355505050565b600054610100900460ff166121da5760405162461bcd60e51b8152600401610abc90612b5e565b610b3633611c19565b6040518061020001604052806010905b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816121f35790505090565b8280546122369061285a565b90600052602060002090601f016020900481019282612258576000855561229e565b82601f1061227157805160ff191683800117855561229e565b8280016001018555821561229e579182015b8281111561229e578251825591602001919060010190612283565b506122aa9291506122ae565b5090565b5b808211156122aa57600081556001016122af565b80356001600160a01b038116811461156d57600080fd5b6000602082840312156122ec57600080fd5b6122f5826122c3565b9392505050565b6001600160e01b0319811681146112e357600080fd5b60006020828403121561232457600080fd5b81356122f5816122fc565b60005b8381101561234a578181015183820152602001612332565b8381111561145b5750506000910152565b6000815180845261237381602086016020860161232f565b601f01601f19169290920160200192915050565b6020815260006122f5602083018461235b565b6000602082840312156123ac57600080fd5b5035919050565b600080604083850312156123c657600080fd5b6123cf836122c3565b946020939093013593505050565b6000806000606084860312156123f257600080fd5b6123fb846122c3565b9250612409602085016122c3565b9150604084013590509250925092565b6020808252825182820181905260009190848201906040850190845b8181101561245157835183529284019291840191600101612435565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b604051610200810167ffffffffffffffff811182821017156124975761249761245d565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156124c6576124c661245d565b604052919050565b803561ffff8116811461156d57600080fd5b803560ff8116811461156d57600080fd5b600082601f83011261250257600080fd5b61250a612473565b8061020084018581111561251d57600080fd5b845b8181101561253e57612530816124e0565b84526020938401930161251f565b509095945050505050565b600080600080610800858703121561256057600080fd5b85601f86011261256f57600080fd5b612577612473565b8061020087018881111561258a57600080fd5b875b818110156125ab5761259d816124ce565b84526020938401930161258c565b508196506125b989826124f1565b95505050506125cc8661040087016124f1565b91506125dc8661060087016124f1565b905092959194509250565b60008060008060008060c0878903121561260057600080fd5b86359550612610602088016124e0565b945061261e604088016124e0565b935061262c606088016124e0565b925061263a608088016124e0565b915061264860a088016124ce565b90509295509295509295565b60008060008060008060c0878903121561266d57600080fd5b8635955061267d602088016124e0565b945061268b604088016124e0565b9350612699606088016124e0565b92506126a7608088016124e0565b915061264860a088016124e0565b600080604083850312156126c857600080fd5b6126d1836122c3565b9150602083013580151581146126e657600080fd5b809150509250929050565b600067ffffffffffffffff82111561270b5761270b61245d565b50601f01601f191660200190565b6000806000806080858703121561272f57600080fd5b612738856122c3565b9350612746602086016122c3565b925060408501359150606085013567ffffffffffffffff81111561276957600080fd5b8501601f8101871361277a57600080fd5b803561278d612788826126f1565b61249d565b8181528860208385010111156127a257600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b80610200810183101561099957600080fd5b60008060008061080085870312156127ed57600080fd5b6127f786866127c4565b93506128078661020087016127c4565b92506128178661040087016127c4565b91506125dc8661060087016127c4565b6000806040838503121561283a57600080fd5b612843836122c3565b9150612851602084016122c3565b90509250929050565b600181811c9082168061286e57607f821691505b6020821081141561288f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156128be576128be612895565b500190565b6000828210156128d5576128d5612895565b500390565b60006000198214156128ee576128ee612895565b5060010190565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff81141561292257612922612895565b60010192915050565b6108008101818360005b6010811015612988578151805160ff90811685526020808301518216818701526040808401519092169186019190915260609182015161ffff169185019190915260809093019290910190600101612935565b50505092915050565b6000602082840312156129a357600080fd5b815167ffffffffffffffff8111156129ba57600080fd5b8201601f810184136129cb57600080fd5b80516129d9612788826126f1565b8181528560208385010111156129ee57600080fd5b6129ff82602083016020860161232f565b95945050505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612a3b9083018461235b565b9695505050505050565b60008251612a5781846020870161232f565b9190910192915050565b600060208284031215612a7357600080fd5b81516122f5816122fc565b838152610840810160208083018560005b6010808210612a9e5750612adc565b825460ff8082168652600882901c8116878701529181901c909116604085015260181c61ffff16606084015260809092019160019182019101612a8f565b5050506001600160a01b03841661082084015250610e2e565b600060208284031215612b0757600080fd5b6122f5826124ce565b6102008101818360005b60108110156129885761ffff612b2f836124ce565b1683526020928301929190910190600101612b1a565b600060208284031215612b5757600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60208082526028908201527f455243373231473a205f6d696e74496e7465726e616c206f766572206d6178426040820152676174636853697a6560c01b606082015260800190565b600060208284031215612c0357600080fd5b6122f5826124e056fea2646970667358221220ef13b603f81de63f7c75799e70619d665df1f704512165f34f03cdd07c650e5c64736f6c634300080c0033";

type CollageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CollageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Collage__factory extends ContractFactory {
  constructor(...args: CollageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Collage> {
    return super.deploy(overrides || {}) as Promise<Collage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Collage {
    return super.attach(address) as Collage;
  }
  override connect(signer: Signer): Collage__factory {
    return super.connect(signer) as Collage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CollageInterface {
    return new utils.Interface(_abi) as CollageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Collage {
    return new Contract(address, _abi, signerOrProvider) as Collage;
  }
}
