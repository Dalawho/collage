/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Collage,
  CollageInterface,
} from "../../../contracts/Collage.sol/Collage";

const _abi = [
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "maxFreeClaimed",
    type: "error",
  },
  {
    inputs: [],
    name: "maxMintsPerWallet",
    type: "error",
  },
  {
    inputs: [],
    name: "mintNotStarted",
    type: "error",
  },
  {
    inputs: [],
    name: "notAValidSender",
    type: "error",
  },
  {
    inputs: [],
    name: "notTokenOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "onlyMinter",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_balanceData",
    outputs: [
      {
        internalType: "uint32",
        name: "balance",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "mintedAmount",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "allowListMinted",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "_getTokenDataOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint8",
                name: "layerId",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "xOffset",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "yOffset",
                type: "uint8",
              },
            ],
            internalType: "struct ERC721G.LayerStruct[4]",
            name: "layers",
            type: "tuple[4]",
          },
        ],
        internalType: "struct ERC721G.OwnerStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_tokenData",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "_trueOwnerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "layer",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "layerId",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "xOffset",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "yOffset",
        type: "uint8",
      },
    ],
    name: "addLayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "address_",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxBatchSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "layer",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "layerId",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "xOffset",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "yOffset",
        type: "uint8",
      },
    ],
    name: "mintAndSet",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "mintIndex",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pieces",
    outputs: [
      {
        internalType: "contract IPieces",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "layerNr",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "pieceId",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "xOffset",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "yOffset",
        type: "uint8",
      },
    ],
    name: "previewCollage",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "render",
    outputs: [
      {
        internalType: "contract IRender",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from_",
        type: "address",
      },
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from_",
        type: "address",
      },
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data_",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator_",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved_",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newPieces",
        type: "address",
      },
    ],
    name: "setPieces",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newRender",
        type: "address",
      },
    ],
    name: "setRender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "iid_",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "address_",
        type: "address",
      },
    ],
    name: "totalBalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "address_",
        type: "address",
      },
    ],
    name: "totalMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from_",
        type: "address",
      },
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "address_",
        type: "address",
      },
    ],
    name: "walletOfOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612417806100206000396000f3fe6080604052600436106102245760003560e01c8063715018a611610123578063d55f9273116100ab578063e6798baa1161006f578063e6798baa14610709578063e985e9c51461071f578063eaea130f1461075a578063f0c136cb1461077a578063f2fde38b1461079a57600080fd5b8063d55f92731461068a578063d5abeb01146106a0578063d607497a146106b6578063e1d7a59d146106d6578063e641af5c146106f657600080fd5b8063a22cb465116100f2578063a22cb465146105c7578063b0b50ed5146105e7578063b88d4fde1461061d578063ba745f2e1461063d578063c87b56dd1461066a57600080fd5b8063715018a61461056a5780638129fc1c1461057f5780638da5cb5b1461059457806395d89b41146105b257600080fd5b80632913daa0116101b15780634b0ee02a116101755780634b0ee02a146104585780635266069d146104785780635e7676e1146104ee5780636352211e1461050e57806370a082311461052e57600080fd5b80632913daa01461039f5780632c2cdd60146103b55780633a965282146103eb57806342842e0e1461040b578063438b63001461042b57600080fd5b8063095ea7b3116101f8578063095ea7b3146103205780631249c58b14610342578063176740361461034a57806318160ddd1461036a57806323b872dd1461037f57600080fd5b80623d47901461022957806301ffc9a71461028057806306fdde03146102b0578063081812fc146102d2575b600080fd5b34801561023557600080fd5b5061026d610244366004611d17565b6001600160a01b0316600090815260076020526040902054640100000000900463ffffffff1690565b6040519081526020015b60405180910390f35b34801561028c57600080fd5b506102a061029b366004611d4f565b6107ba565b6040519015158152602001610277565b3480156102bc57600080fd5b506102c5610842565b6040516102779190611dc4565b3480156102de57600080fd5b506103086102ed366004611dd7565b6009602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610277565b34801561032c57600080fd5b5061034061033b366004611df0565b6108d0565b005b610340610977565b34801561035657600080fd5b50607054610308906001600160a01b031681565b34801561037657600080fd5b5061026d6109b9565b34801561038b57600080fd5b5061034061039a366004611e1a565b6109d0565b3480156103ab57600080fd5b5061026d60055481565b3480156103c157600080fd5b506103086103d0366004611dd7565b6006602052600090815260409020546001600160a01b031681565b3480156103f757600080fd5b506102c5610406366004611e67565b610a3c565b34801561041757600080fd5b50610340610426366004611e1a565b610aef565b34801561043757600080fd5b5061044b610446366004611d17565b610b0a565b6040516102779190611ec5565b34801561046457600080fd5b5061026d610473366004611d17565b610beb565b34801561048457600080fd5b506104c7610493366004611d17565b60076020526000908152604090205463ffffffff808216916401000000008104821691680100000000000000009091041683565b6040805163ffffffff94851681529284166020840152921691810191909152606001610277565b3480156104fa57600080fd5b50610308610509366004611dd7565b610c0f565b34801561051a57600080fd5b50610308610529366004611dd7565b610c21565b34801561053a57600080fd5b5061026d610549366004611d17565b6001600160a01b031660009081526007602052604090205463ffffffff1690565b34801561057657600080fd5b50610340610c35565b34801561058b57600080fd5b50610340610c47565b3480156105a057600080fd5b50603d546001600160a01b0316610308565b3480156105be57600080fd5b506102c5610da0565b3480156105d357600080fd5b506103406105e2366004611f09565b610dad565b3480156105f357600080fd5b50610308610602366004611dd7565b6008602052600090815260409020546001600160a01b031681565b34801561062957600080fd5b50610340610638366004611fb4565b610dbc565b34801561064957600080fd5b5061065d610658366004611dd7565b610f1b565b60405161027791906120ad565b34801561067657600080fd5b506102c5610685366004611dd7565b6110fc565b34801561069657600080fd5b5061026d60035481565b3480156106ac57600080fd5b5061026d6103e881565b3480156106c257600080fd5b50606f54610308906001600160a01b031681565b3480156106e257600080fd5b506103406106f1366004611e67565b611180565b6103406107043660046120d9565b6112ef565b34801561071557600080fd5b5061026d60045481565b34801561072b57600080fd5b506102a061073a36600461212d565b600a60209081526000928352604080842090915290825290205460ff1681565b34801561076657600080fd5b50610340610775366004611d17565b6113a6565b34801561078657600080fd5b50610340610795366004611d17565b6113d0565b3480156107a657600080fd5b506103406107b5366004611d17565b6113fa565b60006301ffc9a760e01b6001600160e01b0319831614806107eb57506380ac58cd60e01b6001600160e01b03198316145b806108065750635b5e139f60e01b6001600160e01b03198316145b8061082157506307f5828d60e41b6001600160e01b03198316145b8061083c5750632483248360e11b6001600160e01b03198316145b92915050565b6001805461084f90612160565b80601f016020809104026020016040519081016040528092919081815260200182805461087b90612160565b80156108c85780601f1061089d576101008083540402835291602001916108c8565b820191906000526020600020905b8154815290600101906020018083116108ab57829003601f168201915b505050505081565b60006108db82610c21565b90506001600160a01b03811633148061091757506001600160a01b0381166000908152600a6020908152604080832033845290915290205460ff165b6109685760405162461bcd60e51b815260206004820152601f60248201527f455243373231473a20617070726f7665206e6f7420617574686f72697a65640060448201526064015b60405180910390fd5b6109728383611470565b505050565b6103e86109826109b9565b61098d9060016121b1565b11156109ac5760405163d05cb60960e01b815260040160405180910390fd5b6109b73360016114de565b565b60006004546003546109cb91906121c9565b905090565b6109da3382611514565b610a315760405162461bcd60e51b815260206004820152602260248201527f455243373231473a207472616e7366657246726f6d20756e617574686f72697a604482015261195960f21b606482015260840161095f565b610972838383611593565b606f546060906001600160a01b031663a82df44e610a5988610f1b565b602001518760405180606001604052808960ff1681526020018860ff1681526020018760ff168152506040518463ffffffff1660e01b8152600401610aa0939291906121e0565b600060405180830381865afa158015610abd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ae59190810190612225565b9695505050505050565b61097283838360405180602001604052806000815250610dbc565b60606000610b33836001600160a01b031660009081526007602052604090205463ffffffff1690565b905060008167ffffffffffffffff811115610b5057610b50611f45565b604051908082528060200260200182016040528015610b79578160200160208202803683370190505b506004549091506000905b83821015610be157856001600160a01b0316610b9f82610c21565b6001600160a01b03161415610bd957808383610bba8161229c565b945081518110610bcc57610bcc6122b7565b6020026020010181815250505b600101610b84565b5090949350505050565b6001600160a01b03811660009081526007602052604081205463ffffffff1661083c565b6000610c1a82610f1b565b5192915050565b600080610c2d83610f1b565b519392505050565b610c3d611705565b6109b7600061175f565b600054610100900460ff1615808015610c675750600054600160ff909116105b80610c815750303b158015610c81575060005460ff166001145b610ce45760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161095f565b6000805460ff191660011790558015610d07576000805461ff0019166101001790555b610d4f60405180604001604052806007815260200166436f6c6c61676560c81b81525060405180604001604052806003815260200162434c4760e81b8152506001601e6117b1565b610d57611812565b8015610d9d576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6002805461084f90612160565b610db8338383611841565b5050565b610dc78484846109d0565b6001600160a01b0383163b15610f15576000836001600160a01b031663150b7a0233878686604051602401610dff94939291906122cd565b6040516020818303038152906040529060e01b6020820180516001600160e01b038381831617835250505050604051610e389190612300565b6000604051808303816000865af19150503d8060008114610e75576040519150601f19603f3d011682016040523d82523d6000602084013e610e7a565b606091505b50915050600081806020019051810190610e94919061231c565b9050630a85bd0160e11b6001600160e01b0319821614610f125760405162461bcd60e51b815260206004820152603360248201527f455243373231473a20736166655472616e7366657246726f6d20746f5f206e6f6044820152726e2d45524337323152656365697661626c652160681b606482015260840161095f565b50505b50505050565b610f23611c00565b600454821015610f755760405162461bcd60e51b815260206004820152601a60248201527f546f6b656e49642062656c6f77207374617274696e6720496421000000000000604482015260640161095f565b6000828152600660205260409020546001600160a01b0316151580610f9c57506003548210155b156110385760008281526006602090815260408083208151808301835281546001600160a01b03168152825160808101909352939092840191906001840190600490835b8282101561102a57604080516060810182528386015460ff808216835261010082048116602080850191909152620100009092041692820192909252825260019092019101610fe0565b505050915250909392505050565b815b6000818152600860205260409020546001600160a01b031661105f576000190161103a565b60008181526008602090815260408083208151808301835281546001600160a01b03168152825160808101909352939092840191906001840190600490835b828210156110e857604080516060810182528386015460ff80821683526101008204811660208085019190915262010000909204169282019290925282526001909201910161109e565b50505091525090949350505050565b919050565b606f546060906001600160a01b03166388e593438361111a81610f1b565b602001516040518363ffffffff1660e01b815260040161113b929190612339565b600060405180830381865afa158015611158573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261083c9190810190612225565b6000858152600660205260409020546001600160a01b031633146111b7576040516348f2abcb60e11b815260040160405180910390fd5b607054604051637a94c56560e11b815233600482015260ff85166024820152600160448201526001600160a01b039091169063f5298aca90606401600060405180830381600087803b15801561120c57600080fd5b505af1158015611220573d6000803e3d6000fd5b5050505060405180606001604052808460ff1681526020018360ff1681526020018260ff16815250600660008781526020019081526020016000206001018560ff1660048110611272576112726122b7565b825191018054602084015160409485015160ff908116620100000262ff0000199282166101000261ffff1990941691909516179190911716919091179055517ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7906112e09087815260200190565b60405180910390a15050505050565b6103e86112fa6109b9565b6113059060016121b1565b11156113245760405163d05cb60960e01b815260040160405180910390fd5b611333336001868686866118ae565b607054604051637a94c56560e11b815233600482015260ff85166024820152600160448201526001600160a01b039091169063f5298aca90606401600060405180830381600087803b15801561138857600080fd5b505af115801561139c573d6000803e3d6000fd5b5050505050505050565b6113ae611705565b607080546001600160a01b0319166001600160a01b0392909216919091179055565b6113d8611705565b606f80546001600160a01b0319166001600160a01b0392909216919091179055565b611402611705565b6001600160a01b0381166114675760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161095f565b610d9d8161175f565b600081815260096020526040902080546001600160a01b0319166001600160a01b03841690811790915581906114a582610c21565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b805b60055481111561150a576005546114f790826121c9565b905061150583600554611a86565b6114e0565b6109728382611a86565b60008061152083610c21565b9050836001600160a01b0316816001600160a01b0316148061155b57506000838152600960205260409020546001600160a01b038581169116145b8061158b57506001600160a01b038082166000908152600a602090815260408083209388168352929052205460ff165b949350505050565b61159c81610c21565b6001600160a01b0316836001600160a01b0316146115fc5760405162461bcd60e51b815260206004820152601d60248201527f455243373231473a205f7472616e7366657220213d206f776e65724f66000000604482015260640161095f565b6001600160a01b0382166116525760405162461bcd60e51b815260206004820152601960248201527f455243373231473a205f7472616e7366657220746f2030783000000000000000604482015260640161095f565b600081815260096020908152604080832080546001600160a01b03199081169091556006835281842080549091166001600160a01b038781169182179092559087168085526007909352818420805463ffffffff1980821663ffffffff928316600019018316179092558286528386208054928316928216600101909116919091179055905184939192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b603d546001600160a01b031633146109b75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161095f565b603d80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166117d85760405162461bcd60e51b815260040161095f9061234e565b83516117eb906001906020870190611c28565b5082516117ff906002906020860190611c28565b5060038290556004919091556005555050565b600054610100900460ff166118395760405162461bcd60e51b815260040161095f9061234e565b6109b7611bd0565b6001600160a01b038381166000818152600a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0386166119045760405162461bcd60e51b815260206004820152601d60248201527f455243373231473a205f6d696e74496e7465726e616c20746f20307830000000604482015260640161095f565b6005548511156119265760405162461bcd60e51b815260040161095f90612399565b600354600061193587836121b1565b905060405180606001604052808660ff1681526020018560ff1681526020018460ff16815250600660008481526020019081526020016000206001018760ff1660048110611985576119856122b7565b82519101805460208085015160409586015160ff908116620100000262ff0000199282166101000261ffff199095169190961617929092179190911692909217905560008481526006825282812080546001600160a01b038d166001600160a01b031990911681179091558152600790915220805464010000000063ffffffff8083168b01811663ffffffff198416811783900482168c0190911690910267ffffffffffffffff19909216171790555b60405182906001600160a01b038a16906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4808260010192508210611a355760035550505050505050565b6001600160a01b038216611adc5760405162461bcd60e51b815260206004820152601d60248201527f455243373231473a205f6d696e74496e7465726e616c20746f20307830000000604482015260640161095f565b600554811115611afe5760405162461bcd60e51b815260040161095f90612399565b6003546000611b0d83836121b1565b600083815260066020908152604080832080546001600160a01b038a166001600160a01b03199091168117909155835260079091529020805464010000000063ffffffff8083168801811663ffffffff19841681178390048216890190911690910267ffffffffffffffff199092161717905590505b60405182906001600160a01b038616906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4808260010192508210611b8357600355505050565b600054610100900460ff16611bf75760405162461bcd60e51b815260040161095f9061234e565b6109b73361175f565b604051806040016040528060006001600160a01b03168152602001611c23611cac565b905290565b828054611c3490612160565b90600052602060002090601f016020900481019282611c565760008555611c9c565b82601f10611c6f57805160ff1916838001178555611c9c565b82800160010185558215611c9c579182015b82811115611c9c578251825591602001919060010190611c81565b50611ca8929150611ceb565b5090565b60405180608001604052806004905b6040805160608101825260008082526020808301829052928201528252600019909201910181611cbb5790505090565b5b80821115611ca85760008155600101611cec565b80356001600160a01b03811681146110f757600080fd5b600060208284031215611d2957600080fd5b611d3282611d00565b9392505050565b6001600160e01b031981168114610d9d57600080fd5b600060208284031215611d6157600080fd5b8135611d3281611d39565b60005b83811015611d87578181015183820152602001611d6f565b83811115610f155750506000910152565b60008151808452611db0816020860160208601611d6c565b601f01601f19169290920160200192915050565b602081526000611d326020830184611d98565b600060208284031215611de957600080fd5b5035919050565b60008060408385031215611e0357600080fd5b611e0c83611d00565b946020939093013593505050565b600080600060608486031215611e2f57600080fd5b611e3884611d00565b9250611e4660208501611d00565b9150604084013590509250925092565b803560ff811681146110f757600080fd5b600080600080600060a08688031215611e7f57600080fd5b85359450611e8f60208701611e56565b9350611e9d60408701611e56565b9250611eab60608701611e56565b9150611eb960808701611e56565b90509295509295909350565b6020808252825182820181905260009190848201906040850190845b81811015611efd57835183529284019291840191600101611ee1565b50909695505050505050565b60008060408385031215611f1c57600080fd5b611f2583611d00565b915060208301358015158114611f3a57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611f8457611f84611f45565b604052919050565b600067ffffffffffffffff821115611fa657611fa6611f45565b50601f01601f191660200190565b60008060008060808587031215611fca57600080fd5b611fd385611d00565b9350611fe160208601611d00565b925060408501359150606085013567ffffffffffffffff81111561200457600080fd5b8501601f8101871361201557600080fd5b803561202861202382611f8c565b611f5b565b81815288602083850101111561203d57600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b8060005b6004811015610f155761209784835160ff815116825260ff602082015116602083015260ff60408201511660408301525050565b6060939093019260209190910190600101612063565b81516001600160a01b031681526020808301516101a08301916120d29084018261205f565b5092915050565b600080600080608085870312156120ef57600080fd5b6120f885611e56565b935061210660208601611e56565b925061211460408601611e56565b915061212260608601611e56565b905092959194509250565b6000806040838503121561214057600080fd5b61214983611d00565b915061215760208401611d00565b90509250929050565b600181811c9082168061217457607f821691505b6020821081141561219557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156121c4576121c461219b565b500190565b6000828210156121db576121db61219b565b500390565b61020081016121ef828661205f565b60ff848116610180840152835181166101a0840152602084015181166101c08401526040840151166101e0830152949350505050565b60006020828403121561223757600080fd5b815167ffffffffffffffff81111561224e57600080fd5b8201601f8101841361225f57600080fd5b805161226d61202382611f8c565b81815285602083850101111561228257600080fd5b612293826020830160208601611d6c565b95945050505050565b60006000198214156122b0576122b061219b565b5060010190565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610ae590830184611d98565b60008251612312818460208701611d6c565b9190910192915050565b60006020828403121561232e57600080fd5b8151611d3281611d39565b8281526101a08101611d32602083018461205f565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60208082526028908201527f455243373231473a205f6d696e74496e7465726e616c206f766572206d6178426040820152676174636853697a6560c01b60608201526080019056fea2646970667358221220e15004c6acc77bc998b262779db623d6305e246c51141044e8690e4368cf7e0964736f6c634300080c0033";

type CollageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CollageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Collage__factory extends ContractFactory {
  constructor(...args: CollageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Collage> {
    return super.deploy(overrides || {}) as Promise<Collage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Collage {
    return super.attach(address) as Collage;
  }
  override connect(signer: Signer): Collage__factory {
    return super.connect(signer) as Collage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CollageInterface {
    return new utils.Interface(_abi) as CollageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Collage {
    return new Contract(address, _abi, signerOrProvider) as Collage;
  }
}
