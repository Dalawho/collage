/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Collage,
  CollageInterface,
} from "../../../contracts/Collage.sol/Collage";

const _abi = [
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "maxFreeClaimed",
    type: "error",
  },
  {
    inputs: [],
    name: "maxMintsPerWallet",
    type: "error",
  },
  {
    inputs: [],
    name: "mintNotStarted",
    type: "error",
  },
  {
    inputs: [],
    name: "notAValidSender",
    type: "error",
  },
  {
    inputs: [],
    name: "notTokenOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "onlyMinter",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_balanceData",
    outputs: [
      {
        internalType: "uint32",
        name: "balance",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "mintedAmount",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "allowListMinted",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "_getTokenDataOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint8",
                name: "layerId",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "xOffset",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "yOffset",
                type: "uint8",
              },
            ],
            internalType: "struct ERC721G.LayerStruct[4]",
            name: "layers",
            type: "tuple[4]",
          },
        ],
        internalType: "struct ERC721G.OwnerStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_tokenData",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "_trueOwnerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "layer",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "layerId",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "xOffset",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "yOffset",
        type: "uint8",
      },
    ],
    name: "addLayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "address_",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxBatchSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8[4]",
        name: "layerIds",
        type: "uint8[4]",
      },
      {
        internalType: "uint8[4]",
        name: "xOffsets",
        type: "uint8[4]",
      },
      {
        internalType: "uint8[4]",
        name: "yOffsets",
        type: "uint8[4]",
      },
    ],
    name: "mintAndSet",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "mintIndex",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pieces",
    outputs: [
      {
        internalType: "contract IPieces",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8[4]",
        name: "pieceIds",
        type: "uint8[4]",
      },
      {
        internalType: "uint8[4]",
        name: "xOffsets",
        type: "uint8[4]",
      },
      {
        internalType: "uint8[4]",
        name: "yOffsets",
        type: "uint8[4]",
      },
    ],
    name: "previewCollage",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "layerNr",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "pieceId",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "xOffset",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "yOffset",
        type: "uint8",
      },
    ],
    name: "previewTokenCollage",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "render",
    outputs: [
      {
        internalType: "contract IRender",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from_",
        type: "address",
      },
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from_",
        type: "address",
      },
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data_",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator_",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved_",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newPieces",
        type: "address",
      },
    ],
    name: "setPieces",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newRender",
        type: "address",
      },
    ],
    name: "setRender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "iid_",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "address_",
        type: "address",
      },
    ],
    name: "totalBalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "address_",
        type: "address",
      },
    ],
    name: "totalMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from_",
        type: "address",
      },
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "address_",
        type: "address",
      },
    ],
    name: "walletOfOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061278a806100206000396000f3fe60806040526004361061022f5760003560e01c806370a082311161012e578063c87b56dd116100ab578063e6798baa1161006f578063e6798baa14610734578063e985e9c51461074a578063eaea130f14610785578063f0c136cb146107a5578063f2fde38b146107c557600080fd5b8063c87b56dd146106a8578063d55f9273146106c8578063d5abeb01146106de578063d607497a146106f4578063e1d7a59d1461071457600080fd5b8063a22cb465116100f2578063a22cb465146105e5578063b0b50ed514610605578063b88d4fde1461063b578063ba745f2e1461065b578063bcd392151461068857600080fd5b806370a082311461054c578063715018a6146105885780638129fc1c1461059d5780638da5cb5b146105b257806395d89b41146105d057600080fd5b806323b872dd116101bc578063438b630011610180578063438b6300146104495780634b0ee02a146104765780635266069d146104965780635e7676e11461050c5780636352211e1461052c57600080fd5b806323b872dd1461039d57806326332c41146103bd5780632913daa0146103dd5780632c2cdd60146103f357806342842e0e1461042957600080fd5b8063095ea7b311610203578063095ea7b31461032b5780630b9633cc1461034d5780631249c58b14610360578063176740361461036857806318160ddd1461038857600080fd5b80623d47901461023457806301ffc9a71461028b57806306fdde03146102bb578063081812fc146102dd575b600080fd5b34801561024057600080fd5b5061027861024f366004611fd1565b6001600160a01b0316600090815260076020526040902054640100000000900463ffffffff1690565b6040519081526020015b60405180910390f35b34801561029757600080fd5b506102ab6102a6366004612002565b6107e5565b6040519015158152602001610282565b3480156102c757600080fd5b506102d061086d565b6040516102829190612077565b3480156102e957600080fd5b506103136102f836600461208a565b6009602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610282565b34801561033757600080fd5b5061034b6103463660046120a3565b6108fb565b005b61034b61035b3660046120de565b6109a2565b61034b610add565b34801561037457600080fd5b50607054610313906001600160a01b031681565b34801561039457600080fd5b50610278610b1f565b3480156103a957600080fd5b5061034b6103b8366004612126565b610b36565b3480156103c957600080fd5b506102d06103d836600461222f565b610ba2565b3480156103e957600080fd5b5061027860055481565b3480156103ff57600080fd5b5061031361040e36600461208a565b6006602052600090815260409020546001600160a01b031681565b34801561043557600080fd5b5061034b610444366004612126565b610cca565b34801561045557600080fd5b50610469610464366004611fd1565b610ce5565b604051610282919061226e565b34801561048257600080fd5b50610278610491366004611fd1565b610dc6565b3480156104a257600080fd5b506104e56104b1366004611fd1565b60076020526000908152604090205463ffffffff808216916401000000008104821691680100000000000000009091041683565b6040805163ffffffff94851681529284166020840152921691810191909152606001610282565b34801561051857600080fd5b5061031361052736600461208a565b610dea565b34801561053857600080fd5b5061031361054736600461208a565b610dfc565b34801561055857600080fd5b50610278610567366004611fd1565b6001600160a01b031660009081526007602052604090205463ffffffff1690565b34801561059457600080fd5b5061034b610e10565b3480156105a957600080fd5b5061034b610e22565b3480156105be57600080fd5b50603d546001600160a01b0316610313565b3480156105dc57600080fd5b506102d0610f7b565b3480156105f157600080fd5b5061034b6106003660046122b2565b610f88565b34801561061157600080fd5b5061031361062036600461208a565b6008602052600090815260409020546001600160a01b031681565b34801561064757600080fd5b5061034b610656366004612316565b610f97565b34801561066757600080fd5b5061067b61067636600461208a565b6110f6565b6040516102829190612407565b34801561069457600080fd5b506102d06106a3366004612433565b6112d7565b3480156106b457600080fd5b506102d06106c336600461208a565b6113a8565b3480156106d457600080fd5b5061027860035481565b3480156106ea57600080fd5b506102786103e881565b34801561070057600080fd5b50606f54610313906001600160a01b031681565b34801561072057600080fd5b5061034b61072f366004612433565b61142c565b34801561074057600080fd5b5061027860045481565b34801561075657600080fd5b506102ab610765366004612491565b600a60209081526000928352604080842090915290825290205460ff1681565b34801561079157600080fd5b5061034b6107a0366004611fd1565b61159b565b3480156107b157600080fd5b5061034b6107c0366004611fd1565b6115c5565b3480156107d157600080fd5b5061034b6107e0366004611fd1565b6115ef565b60006301ffc9a760e01b6001600160e01b03198316148061081657506380ac58cd60e01b6001600160e01b03198316145b806108315750635b5e139f60e01b6001600160e01b03198316145b8061084c57506307f5828d60e41b6001600160e01b03198316145b806108675750632483248360e11b6001600160e01b03198316145b92915050565b6001805461087a906124c4565b80601f01602080910402602001604051908101604052809291908181526020018280546108a6906124c4565b80156108f35780601f106108c8576101008083540402835291602001916108f3565b820191906000526020600020905b8154815290600101906020018083116108d657829003601f168201915b505050505081565b600061090682610dfc565b90506001600160a01b03811633148061094257506001600160a01b0381166000908152600a6020908152604080832033845290915290205460ff165b6109935760405162461bcd60e51b815260206004820152601f60248201527f455243373231473a20617070726f7665206e6f7420617574686f72697a65640060448201526064015b60405180910390fd5b61099d8383611665565b505050565b6103e86109ad610b1f565b6109b8906001612515565b11156109d75760405163d05cb60960e01b815260040160405180910390fd5b60005b60048160ff161015610ace576000848260ff16600481106109fd576109fd61252d565b602002016020810190610a109190612543565b60ff161115610abc576070546001600160a01b031663f5298aca338660ff851660048110610a4057610a4061252d565b602002016020810190610a539190612543565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260ff16602482015260016044820152606401600060405180830381600087803b158015610aa357600080fd5b505af1158015610ab7573d6000803e3d6000fd5b505050505b80610ac68161255e565b9150506109da565b5061099d3360018585856116d3565b6103e8610ae8610b1f565b610af3906001612515565b1115610b125760405163d05cb60960e01b815260040160405180910390fd5b610b1d336001611970565b565b6000600454600354610b31919061257e565b905090565b610b4033826119a6565b610b975760405162461bcd60e51b815260206004820152602260248201527f455243373231473a207472616e7366657246726f6d20756e617574686f72697a604482015261195960f21b606482015260840161098a565b61099d838383611a25565b606f546040805160e081018252855160ff908116608083019081528651821660a08401528551821660c084015282528251606080820185526020808a01518416835280890151841681840152808801518416838701528085019290925284518082018652898601518416815288860151841681840152878601518416818701528486015284518082018652818a015184168152818901518416928101929092528087015190921681850152818301529151637f0cda3360e01b815291926001600160a01b031691637f0cda3391610c7b91600401612595565b600060405180830381865afa158015610c98573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cc091908101906125a4565b90505b9392505050565b61099d83838360405180602001604052806000815250610f97565b60606000610d0e836001600160a01b031660009081526007602052604090205463ffffffff1690565b905060008167ffffffffffffffff811115610d2b57610d2b612162565b604051908082528060200260200182016040528015610d54578160200160208202803683370190505b506004549091506000905b83821015610dbc57856001600160a01b0316610d7a82610dfc565b6001600160a01b03161415610db457808383610d958161261b565b945081518110610da757610da761252d565b6020026020010181815250505b600101610d5f565b5090949350505050565b6001600160a01b03811660009081526007602052604081205463ffffffff16610867565b6000610df5826110f6565b5192915050565b600080610e08836110f6565b519392505050565b610e18611b97565b610b1d6000611bf1565b600054610100900460ff1615808015610e425750600054600160ff909116105b80610e5c5750303b158015610e5c575060005460ff166001145b610ebf5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161098a565b6000805460ff191660011790558015610ee2576000805461ff0019166101001790555b610f2a60405180604001604052806007815260200166436f6c6c61676560c81b81525060405180604001604052806003815260200162434c4760e81b8152506001601e611c43565b610f32611ca4565b8015610f78576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6002805461087a906124c4565b610f93338383611cd3565b5050565b610fa2848484610b36565b6001600160a01b0383163b156110f0576000836001600160a01b031663150b7a0233878686604051602401610fda9493929190612636565b6040516020818303038152906040529060e01b6020820180516001600160e01b0383818316178352505050506040516110139190612673565b6000604051808303816000865af19150503d8060008114611050576040519150601f19603f3d011682016040523d82523d6000602084013e611055565b606091505b5091505060008180602001905181019061106f919061268f565b9050630a85bd0160e11b6001600160e01b03198216146110ed5760405162461bcd60e51b815260206004820152603360248201527f455243373231473a20736166655472616e7366657246726f6d20746f5f206e6f6044820152726e2d45524337323152656365697661626c652160681b606482015260840161098a565b50505b50505050565b6110fe611eba565b6004548210156111505760405162461bcd60e51b815260206004820152601a60248201527f546f6b656e49642062656c6f77207374617274696e6720496421000000000000604482015260640161098a565b6000828152600660205260409020546001600160a01b031615158061117757506003548210155b156112135760008281526006602090815260408083208151808301835281546001600160a01b03168152825160808101909352939092840191906001840190600490835b8282101561120557604080516060810182528386015460ff8082168352610100820481166020808501919091526201000090920416928201929092528252600190920191016111bb565b505050915250909392505050565b815b6000818152600860205260409020546001600160a01b031661123a5760001901611215565b60008181526008602090815260408083208151808301835281546001600160a01b03168152825160808101909352939092840191906001840190600490835b828210156112c357604080516060810182528386015460ff808216835261010082048116602080850191909152620100009092041692820192909252825260019092019101611279565b50505091525090949350505050565b919050565b606060006112e4876110f6565b60200151905060405180606001604052808660ff1681526020018560ff1681526020018460ff16815250818760ff16600481106113235761132361252d565b6020020152606f54604051637f0cda3360e01b81526001600160a01b0390911690637f0cda3390611358908490600401612595565b600060405180830381865afa158015611375573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261139d91908101906125a4565b979650505050505050565b606f546060906001600160a01b03166388e59343836113c6816110f6565b602001516040518363ffffffff1660e01b81526004016113e79291906126ac565b600060405180830381865afa158015611404573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261086791908101906125a4565b6000858152600660205260409020546001600160a01b03163314611463576040516348f2abcb60e11b815260040160405180910390fd5b607054604051637a94c56560e11b815233600482015260ff85166024820152600160448201526001600160a01b039091169063f5298aca90606401600060405180830381600087803b1580156114b857600080fd5b505af11580156114cc573d6000803e3d6000fd5b5050505060405180606001604052808460ff1681526020018360ff1681526020018260ff16815250600660008781526020019081526020016000206001018560ff166004811061151e5761151e61252d565b825191018054602084015160409485015160ff908116620100000262ff0000199282166101000261ffff1990941691909516179190911716919091179055517ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79061158c9087815260200190565b60405180910390a15050505050565b6115a3611b97565b607080546001600160a01b0319166001600160a01b0392909216919091179055565b6115cd611b97565b606f80546001600160a01b0319166001600160a01b0392909216919091179055565b6115f7611b97565b6001600160a01b03811661165c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161098a565b610f7881611bf1565b600081815260096020526040902080546001600160a01b0319166001600160a01b038416908117909155819061169a82610dfc565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6001600160a01b0385166117295760405162461bcd60e51b815260206004820152601d60248201527f455243373231473a205f6d696e74496e7465726e616c20746f20307830000000604482015260640161098a565b60055484111561174b5760405162461bcd60e51b815260040161098a906126c1565b600354600061175a8683612515565b905060005b60048160ff1610156118ab576000868260ff16600481106117825761178261252d565b6020020160208101906117959190612543565b60ff161115611899576040518060600160405280878360ff16600481106117be576117be61252d565b6020020160208101906117d19190612543565b60ff168152602001868360ff16600481106117ee576117ee61252d565b6020020160208101906118019190612543565b60ff168152602001858360ff166004811061181e5761181e61252d565b6020020160208101906118319190612543565b60ff90811690915260008581526006602052604090206001019083166004811061185d5761185d61252d565b825191018054602084015160409094015160ff908116620100000262ff0000199582166101000261ffff19909316919094161717929092161790555b806118a38161255e565b91505061175f565b50600082815260066020908152604080832080546001600160a01b038c166001600160a01b03199091168117909155835260079091529020805464010000000063ffffffff8083168a01811663ffffffff198416811783900482168b0190911690910267ffffffffffffffff19909216171790555b60405182906001600160a01b038916906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a480826001019250821061192057600355505050505050565b805b60055481111561199c57600554611989908261257e565b905061199783600554611d40565b611972565b61099d8382611d40565b6000806119b283610dfc565b9050836001600160a01b0316816001600160a01b031614806119ed57506000838152600960205260409020546001600160a01b038581169116145b80611a1d57506001600160a01b038082166000908152600a602090815260408083209388168352929052205460ff165b949350505050565b611a2e81610dfc565b6001600160a01b0316836001600160a01b031614611a8e5760405162461bcd60e51b815260206004820152601d60248201527f455243373231473a205f7472616e7366657220213d206f776e65724f66000000604482015260640161098a565b6001600160a01b038216611ae45760405162461bcd60e51b815260206004820152601960248201527f455243373231473a205f7472616e7366657220746f2030783000000000000000604482015260640161098a565b600081815260096020908152604080832080546001600160a01b03199081169091556006835281842080549091166001600160a01b038781169182179092559087168085526007909352818420805463ffffffff1980821663ffffffff928316600019018316179092558286528386208054928316928216600101909116919091179055905184939192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b603d546001600160a01b03163314610b1d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161098a565b603d80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16611c6a5760405162461bcd60e51b815260040161098a90612709565b8351611c7d906001906020870190611ee2565b508251611c91906002906020860190611ee2565b5060038290556004919091556005555050565b600054610100900460ff16611ccb5760405162461bcd60e51b815260040161098a90612709565b610b1d611e8a565b6001600160a01b038381166000818152600a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038216611d965760405162461bcd60e51b815260206004820152601d60248201527f455243373231473a205f6d696e74496e7465726e616c20746f20307830000000604482015260640161098a565b600554811115611db85760405162461bcd60e51b815260040161098a906126c1565b6003546000611dc78383612515565b600083815260066020908152604080832080546001600160a01b038a166001600160a01b03199091168117909155835260079091529020805464010000000063ffffffff8083168801811663ffffffff19841681178390048216890190911690910267ffffffffffffffff199092161717905590505b60405182906001600160a01b038616906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4808260010192508210611e3d57600355505050565b600054610100900460ff16611eb15760405162461bcd60e51b815260040161098a90612709565b610b1d33611bf1565b604051806040016040528060006001600160a01b03168152602001611edd611f66565b905290565b828054611eee906124c4565b90600052602060002090601f016020900481019282611f105760008555611f56565b82601f10611f2957805160ff1916838001178555611f56565b82800160010185558215611f56579182015b82811115611f56578251825591602001919060010190611f3b565b50611f62929150611fa5565b5090565b60405180608001604052806004905b6040805160608101825260008082526020808301829052928201528252600019909201910181611f755790505090565b5b80821115611f625760008155600101611fa6565b80356001600160a01b03811681146112d257600080fd5b600060208284031215611fe357600080fd5b610cc382611fba565b6001600160e01b031981168114610f7857600080fd5b60006020828403121561201457600080fd5b8135610cc381611fec565b60005b8381101561203a578181015183820152602001612022565b838111156110f05750506000910152565b6000815180845261206381602086016020860161201f565b601f01601f19169290920160200192915050565b602081526000610cc3602083018461204b565b60006020828403121561209c57600080fd5b5035919050565b600080604083850312156120b657600080fd5b6120bf83611fba565b946020939093013593505050565b806080810183101561086757600080fd5b600080600061018084860312156120f457600080fd5b6120fe85856120cd565b925061210d85608086016120cd565b915061211d8561010086016120cd565b90509250925092565b60008060006060848603121561213b57600080fd5b61214484611fba565b925061215260208501611fba565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156121a1576121a1612162565b604052919050565b803560ff811681146112d257600080fd5b600082601f8301126121cb57600080fd5b6040516080810181811067ffffffffffffffff821117156121ee576121ee612162565b60405280608084018581111561220357600080fd5b845b8181101561222457612216816121a9565b835260209283019201612205565b509195945050505050565b6000806000610180848603121561224557600080fd5b61224f85856121ba565b925061225e85608086016121ba565b915061211d8561010086016121ba565b6020808252825182820181905260009190848201906040850190845b818110156122a65783518352928401929184019160010161228a565b50909695505050505050565b600080604083850312156122c557600080fd5b6122ce83611fba565b9150602083013580151581146122e357600080fd5b809150509250929050565b600067ffffffffffffffff82111561230857612308612162565b50601f01601f191660200190565b6000806000806080858703121561232c57600080fd5b61233585611fba565b935061234360208601611fba565b925060408501359150606085013567ffffffffffffffff81111561236657600080fd5b8501601f8101871361237757600080fd5b803561238a612385826122ee565b612178565b81815288602083850101111561239f57600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b8060005b60048110156110f0578151805160ff908116865260208083015182168188015260409283015190911691860191909152606090940193909101906001016123c5565b81516001600160a01b031681526020808301516101a083019161242c908401826123c1565b5092915050565b600080600080600060a0868803121561244b57600080fd5b8535945061245b602087016121a9565b9350612469604087016121a9565b9250612477606087016121a9565b9150612485608087016121a9565b90509295509295909350565b600080604083850312156124a457600080fd5b6124ad83611fba565b91506124bb60208401611fba565b90509250929050565b600181811c908216806124d857607f821691505b602082108114156124f957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115612528576125286124ff565b500190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561255557600080fd5b610cc3826121a9565b600060ff821660ff811415612575576125756124ff565b60010192915050565b600082821015612590576125906124ff565b500390565b610180810161086782846123c1565b6000602082840312156125b657600080fd5b815167ffffffffffffffff8111156125cd57600080fd5b8201601f810184136125de57600080fd5b80516125ec612385826122ee565b81815285602083850101111561260157600080fd5b61261282602083016020860161201f565b95945050505050565b600060001982141561262f5761262f6124ff565b5060010190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906126699083018461204b565b9695505050505050565b6000825161268581846020870161201f565b9190910192915050565b6000602082840312156126a157600080fd5b8151610cc381611fec565b8281526101a08101610cc360208301846123c1565b60208082526028908201527f455243373231473a205f6d696e74496e7465726e616c206f766572206d6178426040820152676174636853697a6560c01b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea2646970667358221220bc24dda0e40999a44849f478f8a757d531c3baa7838623578e0ef79a6d503e4264736f6c634300080c0033";

type CollageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CollageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Collage__factory extends ContractFactory {
  constructor(...args: CollageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Collage> {
    return super.deploy(overrides || {}) as Promise<Collage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Collage {
    return super.attach(address) as Collage;
  }
  override connect(signer: Signer): Collage__factory {
    return super.connect(signer) as Collage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CollageInterface {
    return new utils.Interface(_abi) as CollageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Collage {
    return new Contract(address, _abi, signerOrProvider) as Collage;
  }
}
